<%
var romScale1 = {"kneeflexion":140,"kneeextension":140,"shoulderextension":45,"shoulderflexion":180,"shoulderabduction":180,"shoulderadduction":180,"shoulderlateral rotation":90,"shouldermedial rotation":70,"ankleinversion":40,"ankleeversion":20,"ankleplantarflexion":45,"ankledorsiflexion":20,"wristflexion":80,"wristextension":70,"wristulnar deviation":45,"wristradial deviation":20,"elbowflexion":145,"elbowextension":145,"hipflexion":125,"hipextension":10,"hipabduction":45,"hipadduction":10,"hiplateral rotation":45,"hipmedial rotation":45,"forearmpronation":90,"forearmsupination":90,"spineflexion":75,"spineextension":30,"spinelateral flexion":35,"spinerotation":30,"elbowlateral rotation":90,"elbowmedial rotation":70};
  
  var page_count  = 0;
  var page_inside = 1;
  var table_count = 0;
  var overall_rom=0;
  var counter_rom=0;
 function overallRom(max, min){
          
          var result = parseInt(max)-parseInt(min);
          if(result>360)
          {
            result = 360;
          }
          if(result>0){
            return result;
          }
          else return 0;
        }
        function joint_range(body,exercisename){
          if (romScale1.hasOwnProperty(body.concat(exercisename))) {
          return romScale1[body.concat(exercisename)];
          }
          else return 0;
        }
        function pie_range(user_angle,range){
          var result = parseInt(360)-parseInt(user_angle);
          if(result < 0)
          {
            return 0;
          }
          else return result;
        }
            function getOverall_goalreached(){
          let temp = 0;
          let total_goal=0;
          let counter=0;
          let range = 0;
          let user_range = 0;
          over_goal_reached=[];
          report[0].sessiondetails.map((e,i)=>{
            if(e.bodypart.toLowerCase()==bodypart)
            {
           range = joint_range(e.bodypart.toLowerCase(),e.exercisename.toLowerCase())
           user_range = overallRom(e.maxangle,e.minangle);
           goal_percentage = (user_range/range)*100;
           over_goal_reached.push(goal_percentage);
           total_goal = total_goal + goal_percentage;
           counter = counter+1; 
            }
          });
          var result = Math.round(total_goal/counter);
          if(parseInt(result)>100)
          {
            result = 100;
          }
          if(isNaN(result))
          {
             return 0;
          }
          return result;
          //return range;
        }
         function goalreached(ideal,user){
          if(user<ideal)
          {
         return Math.round((user/ideal)*100);
         }
         else
          return 100;
         
        }
var today = new Date();
var dd = String(today.getDate()).padStart(2, '0');
var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!
var yyyy = today.getFullYear();
today = mm + '/' + dd + '/' + yyyy;
var input = bodypart;
var test ={};
var test_sorted ={};
var setup = [];
var sorted_exercise=[];
var final_list=[];
var table_list=[];
      let Overall_session = JSON.parse(JSON.stringify(report[0].sessiondetails));
           Overall_session.forEach((element)=>{
           if(element.bodypart.toLowerCase()==input){
            let uniqueKeyPerGraph = element.bodypart.toLowerCase()+element.exercisename.toLowerCase()+element.musclename.toLowerCase()+element.bodyorientation.toLowerCase()+element.orientation.toLowerCase();
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace('-','');
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace('(','');
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace(')','');
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace('  ','');
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace(' ','');
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace('   ','');
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace(/ /g,'');
            setup.push(uniqueKeyPerGraph);
        
            if(!(uniqueKeyPerGraph in test)){
              test[uniqueKeyPerGraph ]=0;
              
              var obj = {report_name:"",left:"",right:""};
              obj.report_name = uniqueKeyPerGraph;
              obj.bodypart = element.bodypart;
              obj.exercisename = element.exercisename;
              obj.musclename = element.musclename;
              obj.orientation = element.orientation;
              obj.bodyorientation = element.bodyorientation;
              obj.minangle = element.minangle;
              obj.maxangle = element.maxangle;
              if(uniqueKeyPerGraph.search('left')){
                
                obj.left = uniqueKeyPerGraph;
                obj.right=""
                
                
              }
              if(uniqueKeyPerGraph.search('right')){
                
                obj.right = uniqueKeyPerGraph;
                 obj.left = "";
                
              }
               table_list.push(obj);
              }
            }
           });
           Overall_session.forEach((element)=>{
           if(element.bodypart.toLowerCase()==input){
            uniqueKeyPerGraph = element.bodypart.toLowerCase()+element.exercisename.toLowerCase()+element.musclename.toLowerCase()+element.bodyorientation.toLowerCase();
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace('-','');
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace('(','');
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace(')','');
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace('  ','');
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace(' ','');
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace('   ','');
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace(/ /g,'');
        
            if(!(uniqueKeyPerGraph in test_sorted)){
              test_sorted[uniqueKeyPerGraph ]=0;
              sorted_exercise.push(uniqueKeyPerGraph);
              
              //
              var obj = {report_name:"",left:"",right:""};
              obj.report_name = uniqueKeyPerGraph;
              if((uniqueKeyPerGraph+'left' in test)){
                
                obj.left = uniqueKeyPerGraph+'left';
                
                
              }
              if((uniqueKeyPerGraph+'right' in test)){
                
                obj.right = uniqueKeyPerGraph+'right';
                
              }
              obj.bodypart = element.bodypart;
              obj.exercisename = element.exercisename;
              obj.musclename = element.musclename;
              obj.orientation = element.orientation;
              obj.bodyorientation = element.bodyorientation;
              obj.minangle = element.minangle;
              obj.maxangle = element.maxangle;
            //  obj.
              final_list.push(obj);
    // table_list.push(obj);
              }
            }
           });
            sorted_exercise.forEach((element)=>{
            //   var obj = {report_name:"",left:"",right:""};
            //   obj.report_name = element;
            //   if((element+'left' in test)){
                
            //     obj.left = element+'left';
                
                
            //   }
            //   if((element+'right' in test)){
                
            //     obj.right = element+'right';
                
            //   }
            // //  obj.
            //   final_list.push(obj);
            });
            function joint_range(body,exercisename){
          if (romScale1.hasOwnProperty(body.concat(exercisename))) {
          return romScale1[body.concat(exercisename)];
          }
          else return 0;
        }
// START
 let dataFromServer = JSON.parse(JSON.stringify(report[0].sessiondetails));
      
          let entries_for_the_overall = false;
              //  date from url                                 converting date from url to Date object-->will act as fisrt day for weekly graph
              reqDate= date;
              let [year,month,date_value] = reqDate.split("-",3);
              let presentDate = new Date(year+"/"+ month +"/"+date_value);
              let dateOfJoin = new Date(details[0].phiziopatients[0].dateofjoin);
              let new_template={}
             //filling all the entries(numofdays) with null values
              dataFromServer.forEach((element)=>{
            let uniqueKeyPerGraph = element.bodypart.toLowerCase()+element.exercisename.toLowerCase()+element.musclename.toLowerCase()+element.bodyorientation.toLowerCase()+element.orientation.toLowerCase();
             uniqueKeyPerGraph=uniqueKeyPerGraph.replace('-','');
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace('(','');
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace(')','');
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace('  ','');
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace(' ','');
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace('   ','');
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace(/ /g,'');
            if(!(uniqueKeyPerGraph in new_template)){
              new_template[uniqueKeyPerGraph ]={};
              new_template[uniqueKeyPerGraph ].dataset={
                  emg:new Array(1),rom:new Array(1)
                };
                for(let i=0;i<numofdays;i++){
                  new_template[uniqueKeyPerGraph ].dataset.rom[i] = {
                      date:i,
                      min:null,
                      max:null,
                      sessiontype:null
                  }
                  new_template[uniqueKeyPerGraph ].dataset.emg[i] = {
                      date:i,
                      min:null,
                      max:null,
                      sessiontype:null
                  }
                }
                new_template[uniqueKeyPerGraph ].exerciseName=element.exercisename;
                new_template[uniqueKeyPerGraph ].bodyPart=element.bodypart;
                new_template[uniqueKeyPerGraph ].musclename=element.musclename;
                new_template[uniqueKeyPerGraph].orientation = element.orientation;
                new_template[uniqueKeyPerGraph].bodyorientation = element.bodyorientation;
                new_template[uniqueKeyPerGraph].holdtime = element.holdtime;
                new_template[uniqueKeyPerGraph].activetime = element.activetime;
                new_template[uniqueKeyPerGraph].sessiontype = element.sessiontype;
                new_template[uniqueKeyPerGraph].minangle = element.minangle;
                new_template[uniqueKeyPerGraph].maxangle = element.maxangle;
                new_template[uniqueKeyPerGraph].current_rom_min=null;
                new_template[uniqueKeyPerGraph].current_rom_max=null;
                new_template[uniqueKeyPerGraph].numofsession = 0;
                new_template[uniqueKeyPerGraph].heldon_list={};
                new_template[uniqueKeyPerGraph].heldon_list_array=[];
            }
          });
              console.log('FROMM HEERREE');
              console.log(new_template);
              console.log('TOO EERRNNDD');
              var numofsession=0;
              var prev_date;
              dataFromServer.forEach((element)=>{
              let uniqueKeyPerGraph = element.bodypart.toLowerCase()+element.exercisename.toLowerCase()+element.musclename.toLowerCase()+element.bodyorientation.toLowerCase()+element.orientation.toLowerCase();
               uniqueKeyPerGraph=uniqueKeyPerGraph.replace('-','');
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace('(','');
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace(')','');
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace('  ','');
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace(' ','');
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace('   ','');
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace(/ /g,'');
              // for each date enrty find diff with first date of week and fill in its position
              // if data for a date is not present it is left blank
        if(typeof element.heldon != 'undefined')
        {
          eachDate = element.heldon.substr(0,10);
        }else{
				eachDate = "2020-10-06";
        }
				console.log('THIS THE FORMAT');
				console.log(element.heldon);
                if(!(eachDate in new_template[uniqueKeyPerGraph].heldon_list)){
                  if(element.sessiontype!=''){
                  new_template[uniqueKeyPerGraph].heldon_list_array.push(eachDate);
                  }
                }
                new_template[uniqueKeyPerGraph].heldon_list[eachDate]=null;
                let [year,month,date_value] = eachDate.split("-",3);
                let eachDateFormated = new Date(year+"/"+ month +"/"+date_value);
                console.log(eachDateFormated);
                console.log(presentDate);
                let timeDifference = eachDateFormated-presentDate;
                // console.log(eachDateFormated.toDateString(),presentDate.toDateString(),presentDate-eachDateFormated)
              //  -ve time difference means dates to be plotted are older than present date
            
                  let dayDifference=(numofdays - Math.ceil( Math.abs(timeDifference) / (1000 * 60 * 60 * 24)));
                  console.log(dayDifference, timeDifference, eachDateFormated);
          
                      // making entries_for_the_month= true to show that there are entries for the month
                      entries_for_the_month=true;
                      if(element.sessiontype!=null && element.sessiontype!="")
                      {
                      numofsession = numofsession+1;
                      new_template[uniqueKeyPerGraph].current_rom_min = element.minangle;
                      new_template[uniqueKeyPerGraph].current_rom_max = element.maxangle;
                      new_template[uniqueKeyPerGraph].numofsession = new_template[uniqueKeyPerGraph].numofsession+1;
                      }
                        new_template[uniqueKeyPerGraph].dataset.rom[dayDifference]={
                                            date:Math.abs(dayDifference),
                                            min:element.minangle,
                                            max:element.maxangle,
                                            sessiontype:element.sessiontype
                                }
                    new_template[uniqueKeyPerGraph].dataset.emg[dayDifference]={
                                date:Math.abs(dayDifference),
                                min:"-1",
                                max:element.maxemg,
                                sessiontype:element.sessiontype
                    }
                
                
            });


              function numofsession_func(unique)
              {
                var left = unique+'left';
                var right = unique+'right';
                var left_count = 0;
                var right_count = 0;
                if (typeof new_template[left] != 'undefined')
                {
                    left_count = new_template[left].heldon_list_array.length;
                }
                
                if (typeof new_template[right] != 'undefined')
                {
                    right_count = new_template[right].heldon_list_array.length;
                }
                if(left_count > 1 || right_count> 1)
                {
                  return 1
                }else return 0
              }
              function current_rom_min(unique){
          return new_template[unique].current_rom_min;
         
        }
        function current_rom_max(unique){
          return new_template[unique].current_rom_max;
         
        }
        function get_current_range(unique)
        {
          var min= parseInt(current_rom_min(unique));
          var max= parseInt(current_rom_max(unique));
          var result = max - min;
          if(result>360)
          {
            result = 360;
          }
          if(result>0){
            return result;
          }
          else return 0;
        }
        var table_len = table_list.length;
        if(table_len>9)
        {
          table_len = 9;
        }
        var exercise_count=0;
        for(var i = 0 ;i < table_len; i++)
        {
          if(new_template[table_list[i].report_name].heldon_list_array.length > 1)
          {
            exercise_count=exercise_count+1;
          }
        }
        
          
%>
<% if (typeof details === 'string' ) { %>
<h2><%=details %></h2>
<%} else if ( report[0].sessiondetails.length < 1 ){%>
<h2>no records for this patinet</h2>
<%} else {%> <%const getPainScale = scale => {for (let i = 1; i <= 5; i++) {%>
<% if(scale == i) { %>
<img
  src="/icons/<%= i %>.png"
  style="background-color: yellow; border-radius: 100%"
/>
<% } else { %>
<img
  src="/icons/<%= i %>.png"
  style="background-color: white; border-radius: 50%"
/>
<% } %> <%}};%> 
<%const getMMTGrading = grade => {for(var i=1; i <= 10; i++) {
%> <% if(grade == i) { %>
<span
  style="border: 1px #aaa solid; border-radius: 60%; padding: 0px; background-color: yellow;"
  >&nbsp;<%= i %>&nbsp;</span
>
<% } else { %>
<span
  style="border: 1px #aaa solid; border-radius: 60%; padding: 0px;  background-color: white;"
  >&nbsp;<%= i %>&nbsp;</span
>
<% } %> <% } }%>
<html>
  <head>
    <link rel="stylesheet" href="/stylesheets/style_overall.css" />
    <link rel="stylesheet" href="/stylesheets/main.css" />
    <script src="/d3.min.js"></script>
    <script src="/customcharts.js"></script>
    <script src="/rangefunctions.js"></script>
       <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
       <script type="text/javascript" src="/loading-bar.js"></script>
 <link rel="stylesheet" type="text/css" href="/loading-bar.css"/>
    <script type="text/javascript">
        function increasedRom(min,max,lastmin,lastmax){
          var a = parseInt(max)-parseInt(min);
          var b = parseInt(lastmax)-parseInt(lastmin);
          var result = a-b;
          if(result>360)
          {
            result = 360;
          }
          if(result<-360)
          {
            result = -360;
          }
          return result;
        }
        function increasedEmg(max, lastmax){
          if(parseInt(max) == parseInt(lastmax))
          {
            return 0;
          }
          return parseInt(max)-parseInt(lastmax);
        }
        
console.log(<%- JSON.stringify(test)%>);
console.log(<%- JSON.stringify(test_sorted)%>);
console.log(<%- JSON.stringify(final_list)%>);
console.log("Table list here");
console.log(<%- JSON.stringify(table_list)%>);
//console.log(<%=setup%>);
  
      let first_page = true;
        // between 168 and 167
      var isValidHeight = 1060-12;
      if(isValidHeight <562){
        first_page = false;
        document.getElementById('spacer-for-graphs').innerHTML='<p style="page-break-before: always">';
        document.getElementById('spacer-for-graphs').style.minHeight=`${10}px`;
      }
      else{
      }
      let dataFromServer = <%- JSON.stringify(report[0].sessiondetails)%>
      let numofdays = <%- numofdays%>
      console.log(numofdays);
          let entries_for_the_overall = false;
              //  date from url                                 converting date from url to Date object-->will act as fisrt day for weekly graph
              reqDate= "<%= date%>";
              let [year,month,date_value] = reqDate.split("-",3);
              let presentDate = new Date(year+"/"+ month +"/"+date_value);
              let dateOfJoin = new Date(<%- details[0].phiziopatients[0].dateofjoin%>);
              let template={}
              var unique_keys=[];
             //filling all the entries(numofdays) with null values
              dataFromServer.forEach((element)=>{
            let uniqueKeyPerGraph = element.bodypart.toLowerCase()+element.exercisename.toLowerCase()+element.musclename.toLowerCase()+element.bodyorientation.toLowerCase()+element.orientation.toLowerCase();
             uniqueKeyPerGraph=uniqueKeyPerGraph.replace('-','');
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace('(','');
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace(')','');
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace('  ','');
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace(' ','');
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace('   ','');
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace(/ /g,'');
            if(!(uniqueKeyPerGraph in template)){
              template[uniqueKeyPerGraph ]={};
              template[uniqueKeyPerGraph ].dataset={
                  emg:new Array(1),rom:new Array(1)
                };
                for(let i=0;i<numofdays;i++){
                  template[uniqueKeyPerGraph ].dataset.rom[i] = {
                      date:i,
                      min:null,
                      max:null,
                      sessiontype:null
                  }
                  template[uniqueKeyPerGraph ].dataset.emg[i] = {
                      date:i,
                      min:null,
                      max:null,
                      sessiontype:null
                  }
                }
                template[uniqueKeyPerGraph ].exerciseName=element.exercisename;
                template[uniqueKeyPerGraph ].bodyPart=element.bodypart;
                template[uniqueKeyPerGraph ].musclename=element.musclename;
                template[uniqueKeyPerGraph].orientation = element.orientation;
                template[uniqueKeyPerGraph].bodyorientation = element.bodyorientation;
                template[uniqueKeyPerGraph].holdtime = element.holdtime;
                template[uniqueKeyPerGraph].activetime = element.activetime;
                template[uniqueKeyPerGraph].sessiontype = element.sessiontype;
                template[uniqueKeyPerGraph].minangle = element.minangle;
                template[uniqueKeyPerGraph].maxangle = element.maxangle;
                template[uniqueKeyPerGraph].current_minangle = element.minangle;
                template[uniqueKeyPerGraph].current_maxangle = element.maxangle;
                template[uniqueKeyPerGraph].numofsession = 0;
                template[uniqueKeyPerGraph].consistency = [];
                template[uniqueKeyPerGraph].controlled = [];
                template[uniqueKeyPerGraph].smoothness = [];
                template[uniqueKeyPerGraph].velocity = [];
                template[uniqueKeyPerGraph].activetime_secs=[];
                template[uniqueKeyPerGraph].emg_record=[];
                template[uniqueKeyPerGraph].rom_record=[];
                template[uniqueKeyPerGraph].emg_improvement=0;
                template[uniqueKeyPerGraph].rom_improvement=0;
                template[uniqueKeyPerGraph].heldon_list={};
                template[uniqueKeyPerGraph].heldon_list_array=[];
                unique_keys.push(uniqueKeyPerGraph);
                
            }
          });
              
              console.log('Javascript Template');
              console.log(template);
              console.log('Javascript Template End');
              var numofsession=0;
              dataFromServer.forEach((element)=>{
              let uniqueKeyPerGraph = element.bodypart.toLowerCase()+element.exercisename.toLowerCase()+element.musclename.toLowerCase()+element.bodyorientation.toLowerCase()+element.orientation.toLowerCase();
               uniqueKeyPerGraph=uniqueKeyPerGraph.replace('-','');
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace('(','');
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace(')','');
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace('  ','');
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace(' ','');
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace('   ','');
            uniqueKeyPerGraph=uniqueKeyPerGraph.replace(/ /g,'');
              // for each date enrty find diff with first date of week and fill in its position
              // if data for a date is not present it is left blank
                eachDate = element.heldon.substr(0,10);
                if(!(eachDate in template[uniqueKeyPerGraph].heldon_list)){
                  if(element.sessiontype!=''){
                  template[uniqueKeyPerGraph].heldon_list_array.push(eachDate);
                  }
                }
                template[uniqueKeyPerGraph].heldon_list[eachDate]=null;
                let [year,month,date_value] = eachDate.split("-",3);
                let eachDateFormated = new Date(year+"/"+ month +"/"+date_value);
                // console.log(eachDateFormated);
                // console.log(presentDate);
                let timeDifference = eachDateFormated-presentDate;
                // console.log(eachDateFormated.toDateString(),presentDate.toDateString(),presentDate-eachDateFormated)
              //  -ve time difference means dates to be plotted are older than present date
                if(timeDifference <=0){
                  let dayDifference=(numofdays - Math.ceil( Math.abs(timeDifference) / (1000 * 60 * 60 * 24)));
                  console.log(dayDifference, timeDifference, eachDateFormated);
                if(eachDateFormated>=dateOfJoin && eachDateFormated <=presentDate){
                      // making entries_for_the_month= true to show that there are entries for the month
                      entries_for_the_month=true;
                      if(element.sessiontype!=null && element.sessiontype!="")
                      {
                      template[uniqueKeyPerGraph].numofsession = template[uniqueKeyPerGraph].numofsession+1;
                      template[uniqueKeyPerGraph].current_minangle = element.minangle;
                      template[uniqueKeyPerGraph].current_maxangle = element.maxangle;
                      var active_time_split = template[uniqueKeyPerGraph].activetime.split(":");
                      var active_time_min = parseInt(active_time_split[0].replace('m', ''));
                      var active_time_sec = parseInt(active_time_split[1].replace('s', ''));
                      template[uniqueKeyPerGraph].activetime_secs.push((active_time_min*60)+active_time_sec);
                      if(typeof element.consistency != 'undefined')
                      {
                      template[uniqueKeyPerGraph].consistency.push(Math.round(parseInt(element.consistency)));
                      }
                      if(typeof element.controlled != 'undefined')
                      {
                      template[uniqueKeyPerGraph].controlled.push(Math.round(parseInt(element.controlled)));
                      }
                      if(typeof element.smoothness != 'undefined')
                      {
                      template[uniqueKeyPerGraph].smoothness.push(Math.round(parseInt(element.smoothness)));
                      }
                      if(typeof element.velocity != 'undefined')
                      {
                      template[uniqueKeyPerGraph].velocity.push(Math.round(parseInt(element.velocity)));
                      }
                      template[uniqueKeyPerGraph].emg_record.push(element.maxemg);
                      template[uniqueKeyPerGraph].rom_record.push(element.maxangle - element.minangle);
                   
                      }
                        template[uniqueKeyPerGraph].dataset.rom[dayDifference]={
                                            date:Math.abs(dayDifference),
                                            min:element.minangle,
                                            max:element.maxangle,
                                            sessiontype:element.sessiontype
                                }
                    template[uniqueKeyPerGraph].dataset.emg[dayDifference]={
                                date:Math.abs(dayDifference),
                                min:"-1",
                                max:element.maxemg,
                                sessiontype:element.sessiontype
                    }
                    if(template[uniqueKeyPerGraph].rom_record.length>1)
                    {
                    template[uniqueKeyPerGraph].rom_improvement = template[uniqueKeyPerGraph].rom_record[template[uniqueKeyPerGraph].rom_record.length-1] - template[uniqueKeyPerGraph].rom_record[template[uniqueKeyPerGraph].rom_record.length-2];
                    }
                    if(template[uniqueKeyPerGraph].emg_record.length>1)
                    {
                    template[uniqueKeyPerGraph].emg_improvement = template[uniqueKeyPerGraph].emg_record[template[uniqueKeyPerGraph].emg_record.length-1] - template[uniqueKeyPerGraph].emg_record[template[uniqueKeyPerGraph].emg_record.length-2];
                    }
                }
                }
            });
              var avg_counter;
              var overall_improvement=0;
              
              for(var i =0 ; i<unique_keys.length; i++)
              {
                avg_counter++;
                // overall_improvement =overall_improvement + parseInt(template[unique_keys[i]].emg_improvement);
                console.log(overall_improvement);
              }

              var input = '<%=bodypart%>'

              console.log("HINAAAA");
              console.log(input);

              var date_list=[];
              var final_heldon={};
              var total_list={};

              dataFromServer.forEach((element)=>{
                
                if(element.bodypart.toLowerCase() == input){
                total_list[element.heldon]=0;
                var date = element.heldon.split(' ');
                if(!(date[0] in final_heldon)){
                  date_list.push(date[0]);
                }
                final_heldon[date[0]]=[];
                final_heldon[date[0]].engagement =0;
                }
                 });
              console.log('BEFORE');

              console.log(final_heldon);
              dataFromServer.forEach((element)=>{

                 if(element.bodypart.toLowerCase() == input){
               
                var date = element.heldon.split(' ');
                // final_heldon[date[0]].push(element.activity_list);
               
             
                  if(date[0] in final_heldon){
                final_heldon[date[0]].engagement = parseInt(final_heldon[date[0]].engagement) + 1;
                }
              }
                   
                
                 });

              console.log('AFTER');
                console.log(final_heldon);
                console.log(total_list);
                
                const _MS_PER_DAY = 1000 * 60 * 60 * 24;
                // a and b are javascript Date objects
                function dateDiffInDays(a, b) {
                // Discard the time and time-zone information.
                const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());
                const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());
                return Math.floor((utc2 - utc1) / _MS_PER_DAY);
                }
                activity_list_date_diff = [];
                for(var i =0 ; i <date_list.length-1; i ++)
                {
                  const a = new Date(date_list[i]),
                  b = new Date(date_list[i+1]), 
                  difference = dateDiffInDays(a, b);
                  activity_list_date_diff.push(difference);
                } 
                var good_count=0
                var avg_count =0;
                var bad_count = 0;
                 var activitystatus_string="" 
                if(activity_list_date_diff.length>1){
                for (var i = 0; i < activity_list_date_diff.length-1;i++)
                {
                    if(Math.abs(activity_list_date_diff[i+1] - activity_list_date_diff[i]) > 7)
                    {
                      bad_count = bad_count + 1;
                    }else if(Math.abs(activity_list_date_diff[i+1] - activity_list_date_diff[i]) > 3)
                    {
                      avg_count = avg_count + 1;
                    } else if(Math.abs(activity_list_date_diff[i+1] - activity_list_date_diff[i]) >= 0)
                    {
                      good_count = good_count + 1;
                    }
                }
             
                if(bad_count>=good_count && bad_count>=bad_count)
                {
                    activitystatus_string = "BAD";
                }else if(avg_count>=good_count && avg_count>=bad_count)
                {
                    activitystatus_string = "AVERAGE";
                }
                else if(good_count>=avg_count && good_count>=bad_count)
                {
                    activitystatus_string = "GOOD";
                }
              }else{
                if(activity_list_date_diff[0]>7)
                  {
                      activitystatus_string = "BAD";
                  }else if(activity_list_date_diff[0]>3)
                {
                       activitystatus_string = "AVERAGE";
                }else if(activity_list_date_diff[0]>=0)
                {
                    activitystatus_string = "GOOD";
                }
              }
               
               
              
             
           
              console.log('FILTERED HERERE');
              console.log(template);
              // console.log(date_list);
              // console.log(activity_list_date_diff);
              // console.log(bad_count);
              // console.log(avg_count);
              // console.log(good_count);
              // console.log(activitystatus_string);
              console.log('TOO EERRNNDD');
          //    console.log(template['leftdorsiflexionankle'].dataset.emg[3].max);
    </script>
  </head>

  <body>

<div class="page">
<div class="header"></div>

 <div class = "report_title" style="background-color:white !important;width: 100%;height: 158px;margin-top:30px;">

          <!-- Logo borders -->
          <div  style="width: 105.19pt;height: 105.19pt;position: absolute;top:22.53pt;left: 22.98pt;border: 2px solid #062545 !important;border-radius: 40px;"></div>

          <div  style="width: 105.19pt;height: 105.19pt;position: absolute; top:22.53pt;right:22.98pt;border: 2px solid #062545 !important;border-radius: 40px;"></div>

    
          <!-- Logos -->
           <% if ( details[0].cliniclogo!= null ) { %>
          <img src="<%= details[0].cliniclogo%>" style="position: absolute; width:81pt; height:77pt;top:35pt;left:36pt">
           <%} else {%>
           <img src="/icons/SVG/Defaultlogo.svg" style="position: absolute; width:81pt; height:77pt;top:35pt;left:36pt">
           <%} %> 
          <img src="/icons/Pheezee_logo1.png" style="position: absolute; width:50.69pt; height:67.4pt ;top:35pt;right:50pt">
          <img src="/icons/Pheezee_logo2.png" style="position: absolute; width:60.89pt; height:9.46pt ;top:107pt;right:46pt;">


          <!--Heading WORK on Phone number -->
          <div id="heading-title-box" style="height:90%;width:58.6%;position:relative;left:21%;top:-5%;">
            <% if (  typeof(details[0].clinicname) === "undefined" ) { %>
          <p style="color:#062545 !important;position:relative;text-align: center;font-size:16pt; font-family: 'Avenir';top:4pt;">*Update clinic name*</p>
           <%} else {%>
           <p style="color:#062545 !important;position:relative;text-align: center;font-size:16pt; font-family: 'Avenir';top:4pt;"><%= details[0].clinicname %></p>
           <%} %> 
            
            <p style="color:#062545 !important;position:relative;text-align: center;font-size:11pt; font-family: 'Avenir';padding-right:5pt;padding-left:0pt;top:18pt;"><%=details[0].address %></p>
            <p style="color:#062545 !important;position:relative;text-align: center;font-size:10pt; font-family: 'Avenir';padding-right:20pt;padding-left:20pt;top:30pt;"> <%=details[0].phizioname%>, <%=details[0].degree%></p>
            <p style="color:#062545 !important;position:relative;text-align: center;font-size:10pt; font-family: 'Avenir';padding-right:20pt;padding-left:20pt;top:30pt;">Ph : <%=details[0].phiziophone%></p>
    
          </div>
          <!-- Heading end -->

          <div  style="width:100%;height: 5pt;position: absolute; top:138.01pt;background-color: #D4D4D4 !important;"></div>

        </div>

         <!-- Patient detial -->

        <!--Patient Name-->
        <p style="color:#062545 !important;position: absolute; left:23pt;top:147.22pt;font-size:11pt; font-family: 'Avenir'"><%if(details[0].phiziopatients[0].patientgender.toLowerCase() == 'male'){%>Mr. <%}else {%> Ms. <%}%> <%= details[0].phiziopatients[0].patientname.substr(0,1).toUpperCase()%><%= details[0].phiziopatients[0].patientname.substr(1,details[0].phiziopatients[0].patientname.length)%> /<%=details[0].phiziopatients[0].patientgender.slice(0,1) %></p>
          
        <!--Patient case-->
        <p style="color:#062545 !important;position: absolute; left:65%;top:147.22pt;font-size:11pt; font-family: 'Avenir'"><%=details[0].phiziopatients[0].patientcasedes %></p>
      
        <!--Patient ID-->
        <p style="color:#062545 !important;position: absolute; left:23pt;top:162.22pt;font-size:11pt; font-family: 'Avenir'"><%= details[0].phiziopatients[0].patientid %></p>
          
        <!--Patient Date of First Visit-->
        <p style="color:#062545 !important;position: absolute; left:65%;top:162.22pt;font-size:11pt; font-family: 'Avenir'">Date of First Visit : <%=details[0].phiziopatients[0].dateofjoin
        %></p>
          
        <div  style="width:100%;height: 10.01pt;position: absolute; top:190.01pt;left:-0.74pt;background-color: #062545 !important;"></div>
      
        <!-- Patient detials end -->

        <!-- Session Report Title -->  
        <div  style="width:100%;height: 10.01pt;position: absolute; top:190.01pt;left:-0.74pt;background-color: #062545 !important;">
             
              <img src="/icons/SVG/Bodyparts/<%=input.substr(0,1).toUpperCase()%><%=input.substr(1,10).toLowerCase()%>.svg" style="position: absolute; width:71pt; height:70pt;top:25pt;left:110pt;">
        <p style="color:#062545 !important;text-align: center;font-size:24pt; font-family: 'Avenir';position:relative;padding-top: 30pt;"><b>OVERALL REPORT </br><%=input.toUpperCase()%></b></p>
        </div>
        <!-- Session Report Title End-->


         <!--Overall Dashboard-->
         <div style="width:100%;height: 70pt;position: absolute;background-color: #FFFFFF !important;top:300pt;display: flex;flex-direction: row;border: 3px solid #D4D4D4 ;border-width:  3px 0px 3px 0px;">
          <div style="position:relative;height: 65pt;width: 190pt;border: 3px solid #D4D4D4 ;border-width:  0px 3px 0px 0px;">
           <p style="color: #062545 !important;font-size:10pt; font-family: 'Avenir'; text-align:center;padding-top:5pt;"> Activity </p>
            <p id="activitystatus" style="color: #062545 !important;font-size:10pt; font-family: 'Avenir'; position:relative;top:15pt;left:25pt">  </p>
           <div id="chartactivity" style="width: 60%; height: 70%;position:absolute;bottom:2pt;right:5pt;"></div>
          </div>
          <div style="height: 65pt;width: 110pt;border: 3px solid #D4D4D4 ;border-width:  0px 3px 0px 0px;">
            <p style="color: #062545 !important;font-size:10pt; font-family: 'Avenir'; text-align:center;padding-top:5pt;"> Goal Reached </p>
            <p id = "overall_rom" style="color: #062545 !important;font-size:10pt; font-family: 'Avenir'; position:absolute;left:230pt;top:24pt"></p>
            <div id="over_chart" ></div>
        <div style="background-color: #FFFFFF !important;height:15pt;width50pt; font-family: 'Avenir'; position:absolute;left:220pt;top:50pt;color:#FFFFFF !important">   -     marker</div>
        
          </div>
          <div style="height: 65pt;width: 110pt;border: 3px solid #D4D4D4 ;border-width:  0px 3px 0px 0px;">
            <p style="color: #062545 !important;font-size:10pt; font-family: 'Avenir'; text-align:center;padding-top:5pt;"> Improvement </p>
            <img  id="overall_improvement_icon" style="width:16pt; height:16pt;position:relative;left: 12%; top:7pt">
            <p id="overall_improvement" style = "color: #062545 !important;font-size:14pt; font-family: 'Avenir'; text-align:center;position:relative;bottom:10pt;">  </p>
            
          </div>
          <div style="height: 65pt;width: 110pt;border: 3px solid #D4D4D4 ;border-width:  0px 3px 0px 0px;">
            <p style="color: #062545 !important;font-size:10pt; font-family: 'Avenir'; text-align:center;padding-top:5pt;"> Sessions </p>
            <p style="color: #062545 !important;font-size:14pt; font-family: 'Avenir'; text-align:center;padding-top:10pt;"> <%=setup.length%> </p>
          </div>
          <div style="height: 65pt;width: 110pt;border: 3px solid #D4D4D4 ;border-width:  0px 0px 0px 0px;">
            <p style="color: #062545 !important;font-size:10pt; font-family: 'Avenir'; text-align:center;padding-top:5pt;"> Exercises </p>
            <p style="color: #062545 !important;font-size:14pt; font-family: 'Avenir'; text-align:center;padding-top:10pt;"> <%=exercise_count%> </p>
          </div>
        </div>
        <!--Overall Dashboard END-->


<!-- Report Details -->
        <p style="color:#062545 !important;text-align: center;font-size:16pt; font-family: 'Avenir';position:relative;top:247pt;">Report Details</p>
       <p style="color:#062545 !important;font-size:11pt;display: inline;position:relative; left:160pt;top:258pt; font-family: 'Avenir'">Sessions performed: <b><%=dateString.slice(5,dateString.length) %></b></p>
        <!-- Table -->
        <table style="margin-top: 15px; width: 96%; margin-left: 2%; margin-right: 2%; border-collapse:separate; border-spacing: 0 4px;position:absolute;top:445pt;">
          <tr style="border-radius: 5px;text-align:center;box-shadow: 0 0 0 2px #062545 !important;">
            <th style="text-align: center;padding-top:5px;padding-bottom:5px;">No.</th>
            <th style="text-align: center;padding-top:5px;padding-bottom:5px;">Joint</th>
            <th style="text-align: center;padding-top:5px;padding-bottom:5px;">Movement</th>
            <th style="text-align: center;padding-top:5px;padding-bottom:5px;">Muscle</th>
            <th style="text-align: center;padding-top:5px;padding-bottom:5px;padding-right:20px;">Side</th>
            <th style="text-align: left;padding-top:5px;padding-bottom:5px;">Position</th>
            <th style="text-align: left;padding-top:5px;padding-bottom:5px;">EMG (uV)</th>
            <th style="text-align: left;padding-top:5px;padding-bottom:5px;">ROM (°)</th>
          </tr>

          <% table_list.slice(0,9).map((e,i)=>{ %>

          <%if(new_template[e.report_name].heldon_list_array.length > 1){%>
              <%page_count = page_count+1;%>
              <%table_count = table_count+1%>
          <tr style="border-radius: 5px;text-align:center;box-shadow: 0 0 0 1px #d4d4d4 !important;">
            <!-- No. for Table row-->
            <td style = "padding-top:5px;padding-bottom:5px;text-align: center;"><%=table_count%></td>



            <!-- Joint for Table-->
            <td style = "padding-top:5px;padding-bottom:5px;text-align: center;"><%=e.bodypart%></td>

            <!-- Movement/Exercise name for Table-->
            <%if(typeof e.exercisename!='undefined' && e.exercisename!=null && e.exercisename!=""){%>
              <td style = "padding-top:5px;padding-bottom:5px;text-align: center;"><%=e.exercisename%></td>
            <%}else{%>
              <td style = "padding-top:5px;padding-bottom:5px;text-align: center;"><%="No exercise"%></td>
            <%}%>

            <!-- Muscle name for Table-->
            <%if(typeof e.musclename!='undefined' && e.musclename!=null && e.musclename!=""){%>
              <td style = "padding-top:5px;padding-bottom:5px;text-align: center;"><%=e.musclename%></td>
            <%}else{%>
              <td style = "padding-top:5px;padding-bottom:5px;text-align: center;"><%="No Muscle"%></td>
            <%}%>

            <!-- Side for Table L/R-->
            <%if(typeof e.orientation!='undefined' && e.orientation!="" && e.orientation!=null){%>
            <td style = "padding-top:5px;padding-bottom:5px;text-align: center;padding-right:20px;"><%=e.orientation.substr(0,1).toUpperCase()%><%=e.orientation.substr(1,5).toLowerCase()%></td>
            <%}else{%>
               <td style = "padding-top:5px;padding-bottom:5px;text-align: center;padding-right:20px;"><%="-"%></td>
            <%}%>

             <!-- Body Orientation-->
            <%if(typeof e.bodyorientation!='undefined' && e.bodyorientation!=null && e.bodyorientation!=""){%>
              <td style = "padding-top:5px;padding-bottom:5px;text-align: center;position:relative;right:15px"><%=e.bodyorientation%></td>
            <%}else{%>
              <td style = "padding-top:5px;padding-bottom:5px;text-align: center;"><%="-"%></td>
            <%}%>
            <!-- EMG-->
            <td id="emg_table<%=e.report_name%>" style = "padding-top:5px;padding-bottom:5px;text-align: left;position:relative;top:-5pt;">-</td>
            <!-- ROM for Table-->
             <td id="rom_table<%=e.report_name%>" style = "padding-top:5px;padding-bottom:5px;text-align: left;position:relative;top:-5pt;">-</td>
            
          
          
          </tr>
            <%}%>
   
          <%});%>
        </table>
        <!-- FOOTER-->
        <div style="width: 100%;height: 32pt;background-color:#062444 !important;position: relative;top:641pt;">
               <p style="color:#FFFFFF !important;text-align: right;font-size:11pt; font-family: 'Avenir';top:5pt;right:5pt;position: relative;"> Page 1/<%=page_count+2%></p>  
               <p style="color:#FFFFFF !important;text-align: center;font-size:11pt; font-family: 'Avenir';top:-10pt;position: relative;"> <%if(details[0].phiziopatients[0].patientgender.toLowerCase() == 'male'){%>Mr. <%}else {%> Ms. <%}%> <%= details[0].phiziopatients[0].patientname.substr(0,1).toUpperCase()%><%= details[0].phiziopatients[0].patientname.substr(1,details[0].phiziopatients[0].patientname.length)%> </p>
            <p style="color:#FFFFFF !important;text-align: left;font-size:11pt; font-family: 'Avenir';top:-25pt;position: relative;left: 5pt;"> <%= new Date(today).toDateString().split(' ').slice(1).join(' ')%> </p>


            </div>



</div>

<!-- BODY PART DETAILS REPORT -->
<% final_list.slice(0,9).map((e,i)=>{ %>
<%if(numofsession_func(e.report_name)){%>

<div class="page">

  <div class="header"></div>
          
          <!--Exercise Heading-->

          <div style="width: 100%;height: 92.27pt;background-color:#0069B1 !important;position: relative;">

           <img src="/icons/SVG/<%=e.bodypart.toLowerCase()%><%=e.exercisename.toLowerCase()%><%=e.orientation.toLowerCase()%>.svg" style="position: absolute; width:70pt; height:70pt;top:11pt;left:12pt">
           <br>
           <p style="color: #FFFFFF !important;font-size:16pt; font-family: 'Avenir'; text-align:center;"> <%=e.bodypart%> <%=e.exercisename%></p>
           <p style="color: #FFFFFF !important;font-size:14pt; font-family: 'Avenir'; text-align:center;"><%=e.musclename%> </p>

          <%if(e.bodyorientation.toLowerCase()=="supine"){%>
             <img src="/icons/SVG/<%=e.bodyorientation%>.svg" style="position: relative; width:22.29pt; height:34.03pt;bottom:35pt;right:55pt;float:right">
            <%}else{%>
             <img src="/icons/SVG/<%=e.bodyorientation%>.svg" style="position: relative; width:12.29pt; height:24.03pt;bottom:30pt;right:50pt;float:right">

            <%}%>

              <p style="color: #FFFFFF !important;font-size:14pt; font-family: 'Avenir'; position: absolute;bottom:40pt;left: 563pt;"><%=e.bodyorientation%></p>
           


          </div>
          <!--Exercise Heading END-->
          <div style="width: 100%;height:84.2%;background-color: #FFFFFF;position: relative;top:0pt;display: flex; flex-direction: row;">

            <!-- LEFT DETAILS -->
            <div style="width: 50%;height:100%;background-color: #FFFFFF;position: relative;">
              <div style="width: 100%;height: 32pt;background-color: #FFFFFF;border: 3px solid #D4D4D4 ;border-width:  0px 3px 0px 0px;">
                  <p style="color: #062545 !important;font-size:14pt; font-family: 'Avenir-heavy';text-align: center;padding-top: 5pt;"> LEFT </p>
              </div>

            <!--GOAL REACHED Dashboard-->
              <div style="width: 100%;height: 97pt;background-color: #D4D4D4;display: flex; flex-direction: row;">
              
                <div style="width: 98pt;height: 97pt;background-color: #FFFFFF;border: 3px solid #D4D4D4;">
                  <p style="color: #062545 !important;font-size:10pt; font-family: 'Avenir'; text-align:center;padding-top:5pt;"> Goal Reached</p>
                   <%if(e.left!=''){%>
                    <script type="text/javascript">
              <%=overall_rom = overall_rom+goalreached(joint_range(e.bodypart.toLowerCase(),e.exercisename.toLowerCase()),get_current_range(e.left));%>
              <%= counter_rom = counter_rom+1; %>
              </script>
                  <div id ="goal_reached<%=e.left%>" style="position:relative;left:20pt;height:60pt;width:60pt;top:5pt;"
                        class="ldBar label-center"
                        data-value="<%=goalreached(joint_range(e.bodypart.toLowerCase(),e.exercisename.toLowerCase()),get_current_range(e.left))%>"
                        data-preset="circle"
                        ></div>
                   <%}else{%>
                        <p style="color:#062545 !important;position: relative;top:0pt;text-align: center;font-size:14pt; font-family: 'Avenir';top:20pt;"> _ </p>
                      <%}%>
                </div>
               <!--Consistency -->
                <div style="width: 198pt;height: 97pt;background-color: #FFFFFF;border: 3px solid #D4D4D4 ;border-width:  3px 0px 3px 0px;display: flex; flex-direction: column;">
                <div style="width: 205.5pt;height: 31pt;background-color: #FFFFFF;border: 3px solid #D4D4D4 ;border-width:  0px 1px 3px 0px;">
                  <p style="color: #062545 !important;font-size:10pt; font-family: 'Avenir'; text-align:left;padding-top:5pt;padding-left:5pt;"> Consistency</p>
                  <div id="consistency_rating<%=e.left%>" style="position:relative;bottom:12pt;left: 45%;font-size:16pt;"></div>
                  <%if(e.left!=''){%>
                  <img  id="consistency_icon<%=e.left%>" style="width:16pt; height:16pt;position:relative;bottom:28pt;left: 85%; ">
                  <%}%>
                </div>
                <div style="width: 205.5pt;height: 31pt;background-color: #FFFFFF;border: 3px solid #D4D4D4 ;border-width:  0px 1px 3px 0px;">
                  <p style="color: #062545 !important;font-size:10pt; font-family: 'Avenir'; text-align:left;padding-top:5pt;padding-left:5pt;"> Control </p>
                  <div id="controlled_rating<%=e.left%>" style="position:relative;bottom:12pt;left: 45%;font-size:16pt;"></div>
                   <%if(e.left!=''){%>
                  <img  id="controlled_icon<%=e.left%>" style="width:16pt; height:16pt;position:relative;bottom:28pt;left: 85%; ">
                  <%}%>
                </div>
                <div style="width: 205.5pt;height: 31pt;background-color: #FFFFFF;border: 3px solid #D4D4D4 ;border-width:  0px 1px 1px 0px;">
                  <p style="color: #062545 !important;font-size:10pt; font-family: 'Avenir'; text-align:left;padding-top:5pt;padding-left:5pt;"> Smoothness </p>
                  <div id="smoothness_rating<%=e.left%>" style="position:relative;bottom:12pt;left: 45%;font-size:16pt;"></div>
                   <%if(e.left!=''){%>
                  <img  id="smoothness_icon<%=e.left%>" style="width:16pt; height:16pt;position:relative;bottom:28pt;left: 85%; ">
                  <%}%>
                </div>
              
                </div>
              </div>
              <!--GOAL REACHED Dashboard END-->

              <!-- EMG Graph -->
              <div style="width: 100%;height: 200pt;background-color: #FFFFFF;border: 3px solid #D4D4D4 ;border-width:  0px 3px 3px 0px;">
                <p style="color: #062545 !important;font-size:14pt; font-family: 'Avenir';text-align: left;padding-top: 15pt;padding-left: 15pt;float:left"> EMG (uV) </p>
                <%if(e.left!=''){%>
                <img  id="emg_icon<%=e.left%>" style="width:16pt; height:16pt;float:right;position:relative; right:60pt;top:15pt;">
                <%}else{%>
                <img  id="emg_icon<%=e.report_name%>left" style="width:16pt; height:16pt;float:right;position:relative; right:60pt;top:15pt;">
                <%}%>
                <p id="emg_improvement<%=e.left%>" style="color: #062545 !important;font-size:14pt; font-family: 'Avenir';text-align: right;padding-top: 15pt;padding-right: 15pt;">-</p>
                <%if(e.left!=''){%>
                <div id="chartemg<%=e.left%>" style="width: 250pt; height: 110pt;position: relative;left: 30pt;top:5pt;"></div>
                <%}else{%>
                <div id="chartemg<%=e.report_name%>left" style="width: 250pt; height: 110pt;position: relative;left: 30pt;top:5pt;"></div>
                <%}%>
                <img src="/icons/SVG/overall_g_label_new.png" style="position: relative; width:200pt; height:12pt;top:20pt;left:50pt">
           
              </div>

               <!-- ROM Graph -->
              <div style="width: 100%;height: 200pt;background-color: #FFFFFF;border: 3px solid #D4D4D4 ;border-width:  0px 3px 3px 0px;">
                <p style="color: #062545 !important;font-size:14pt; font-family: 'Avenir';text-align: left;padding-top: 15pt;padding-left: 15pt;float:left"> ROM (°)</p>
                <%if(e.left!=''){%>
                <img id="rom_icon<%=e.left%>" style="width:16pt; height:16pt;float:right;position:relative; right:60pt;top:15pt;">
                <%}else{%>
                <img id="rom_icon<%=e.report_name%>left" style="width:16pt; height:16pt;float:right;position:relative; right:60pt;top:15pt;">
                <%}%>

                <p id="rom_improvement<%=e.left%>" style="color: #062545 !important;font-size:14pt; font-family: 'Avenir';text-align: right;padding-top: 15pt;padding-right: 15pt;">-</p>
                <%if(e.left!=''){%>
                <div id="chartrom<%=e.left%>" style="width: 250pt; height: 110pt;position: relative;left: 30pt;top:5pt;"></div>
                <%}else{%>
                <div id="chartrom<%=e.report_name%>left" style="width: 250pt; height: 110pt;position: relative;left: 30pt;top:5pt;"></div>
                <%}%>
                <img src="/icons/SVG/overall_g_label_new.png" style="position: relative; width:200pt; height:12pt;top:20pt;left:50pt">
              </div>

              <!-- Idea ROM -->
              <div style="width: 100%;height: 41pt;background-color: #FFFFFF;border: 3px solid #D4D4D4 ;border-width:  0px 3px 3px 0px;display: flex;flex-direction: row;">

                <div style="width: 50%;height: 41pt;background-color: #FFFFFF;border: 3px solid #D4D4D4 ;border-width:  0px 3px 3px 0px;">
                   <p style="color: #062545 !important;font-size:10pt; font-family: 'Avenir';text-align: left;padding-top: 15pt;padding-left: 15pt;float:left"> Ideal ROM:</p>
                    <p style="color: #062545 !important;font-size:14pt; font-family: 'Avenir';text-align: right;padding-top: 10pt;padding-left: 5pt;float:left">0° to <%=joint_range(e.bodypart.toLowerCase(),e.exercisename.toLowerCase())%>°</p>
                </div>
                <div style="width: 50%;height: 41pt;background-color: #FFFFFF;border: 3px solid #D4D4D4 ;border-width:  0px 0px 3px 0px;">
                  
                  <p style="color: #062545 !important;font-size:10pt; font-family: 'Avenir';text-align: left;padding-top: 15pt;padding-left: 5pt;float:left"> Current ROM:</p>
                    <p id="current_rom<%=e.report_name%>left" style="color: #062545 !important;font-size:14pt; font-family: 'Avenir';text-align: right;padding-top: 10pt;padding-left: 5pt;float:left">-</p>

                </div>
              </div>

              <!-- Spped -->
              <div style="position:relative;width: 100%;height: 81pt;background-color: #FFFFFF;border: 3px solid #D4D4D4 ;border-width:  0px 3px 3px 0px;">
                <p style="color: #062545 !important;font-size:14pt; font-family: 'Avenir';text-align: left;padding-top: 5pt;padding-left: 15pt;float:left"> Speed (secs/rep)</p>
                <%if(e.left!=''){%>
                <div id="chartspeed<%=e.left%>" style="width: 20%; height: 90%;position:absolute;top:5pt;left:40%""></div>
                <%}%>
              </div>
              <!-- Active time -->
              <div style="position:relative;width: 100%;height: 83.5pt;background-color: #FFFFFF;border: 3px solid #D4D4D4 ;border-width:  0px 3px 3px 0px;">
                <p style="color: #062545 !important;font-size:14pt; font-family: 'Avenir';text-align: left;padding-top: 5pt;padding-left: 15pt;float:left"> Active Time (s)</p>
                <%if(e.left!=''){%>
                <div id="chartactivetime<%=e.left%>" style="width: 25%; height: 90%;position:absolute;top:25pt;left:25%"></div>
                <%}%>
              </div>
 
       
            </div>
            <!-- LEFT DETAILS END -->

            
            <!-- RIGHT DETAILS -->
            <div style="width: 50%;height:100%;background-color: #D4D4D4;position: relative;">
              <div style="width: 100%;height: 32pt;background-color: #FFFFFF;">
                  <p style="color: #062545 !important;font-size:14pt; font-family: 'Avenir-heavy';text-align: center;padding-top: 5pt;"> RIGHT </p>
              </div>

            <!--GOAL REACHED Dashboard-->
              <div style="width: 100%;height: 97pt;background-color: #D4D4D4;display: flex; flex-direction: row;">
              
                <div style="width: 98pt;height: 97pt;background-color: #FFFFFF;border: 3px solid #D4D4D4;border-width:  3px 3px 3px 0px;">
                           <p style="color: #062545 !important;font-size:10pt; font-family: 'Avenir'; text-align:center;padding-top:5pt;"> Goal Reached</p>
                    <%if(e.right!=''){%>
                       <script type="text/javascript">
              <%=overall_rom = overall_rom+goalreached(joint_range(e.bodypart.toLowerCase(),e.exercisename.toLowerCase()),get_current_range(e.right));%>
              <%= counter_rom = counter_rom+1; %>
              </script>

                  <div id ="goal_reached<%=e.right%>" style="position:relative;left:20pt;height:60pt;width:60pt;top:5pt;"
                        class="ldBar label-center"
                        data-value="<%=goalreached(joint_range(e.bodypart.toLowerCase(),e.exercisename.toLowerCase()),get_current_range(e.right))%>"
                        data-preset="circle"
                        ></div>
                   <%}else{%>
                        <p style="color:#062545 !important;position: relative;top:0pt;text-align: center;font-size:14pt; font-family: 'Avenir';top:20pt;"> _ </p>
                      
                      <%}%>              
      </div>
                <!--Consistency -->
                <div style="width: 198pt;height: 97pt;background-color: #FFFFFF;border: 3px solid #D4D4D4 ;border-width:  3px 3px 3px 0px;display: flex; flex-direction: column;">
                <div style="position:relative;width: 206pt;height: 31pt;background-color: #FFFFFF;border: 3px solid #D4D4D4 ;border-width:  0px 0px 3px 0px;">
                  <p style="color: #062545 !important;font-size:10pt; font-family: 'Avenir'; text-align:left;padding-top:5pt;padding-left:5pt;"> Consistency </p>
                   <div id="consistency_rating<%=e.right%>" style="position:absolute;top:5pt;right:50pt;font-size:16pt;"></div>
                  <%if(e.right!=''){%>
                  <img  id="consistency_icon<%=e.right%>" style="width:16pt; height:16pt;position:relative;bottom:15pt;left: 80%; ">
                  <%}%>
                </div>
                <div style="position:relative;width: 206pt;height: 31pt;background-color: #FFFFFF;border: 3px solid #D4D4D4 ;border-width:  0px 0px 3px 0px;">
                  <p style="color: #062545 !important;font-size:10pt; font-family: 'Avenir'; text-align:left;padding-top:5pt;padding-left:5pt;"> Control </p>
                  <div id="controlled_rating<%=e.right%>" style="position:absolute;top:5pt;right:50pt;font-size:16pt;"></div>
                   <%if(e.right!=''){%>
                  <img  id="controlled_icon<%=e.right%>" style="width:16pt; height:16pt;position:relative;bottom:15pt;left: 80%; ">
                  <%}%>
                </div>
                <div style="position:relative;width: 206pt;height: 31pt;background-color: #FFFFFF;border: 3px solid #D4D4D4 ;border-width:  0px 0px 1px 0px;">
                  <p style="color: #062545 !important;font-size:10pt; font-family: 'Avenir'; text-align:left;padding-top:5pt;padding-left:5pt;"> Smoothness </p>
                 <div id="smoothness_rating<%=e.right%>" style="position:absolute;top:5pt;right:50pt;font-size:16pt;"></div>
                   <%if(e.right!=''){%>
                  <img  id="smoothness_icon<%=e.right%>" style="width:16pt; height:16pt;position:relative;bottom:15pt;left: 80%; ">
                  <%}%>
                </div>
              
                </div>
              </div>
              <!--GOAL REACHED Dashboard END-->

              <!-- EMG Graph -->
              <div style="width: 100%;height: 200pt;background-color: #FFFFFF;border: 3px solid #D4D4D4 ;border-width:  0px 0px 3px 0px;">
                <p style="color: #062545 !important;font-size:14pt; font-family: 'Avenir';text-align: left;padding-top: 15pt;padding-left: 15pt;float:left"> EMG (uV) </p>
                <%if(e.right!=''){%>
                <img id="emg_icon<%=e.right%>" style="width:16pt; height:16pt;float:right;position:relative; right:60pt;top:15pt;">
                <%}else{%>
                <img id="emg_icon<%=e.report_name%>right" style="width:16pt; height:16pt;float:right;position:relative; right:60pt;top:15pt;">
                <%}%>

                <p id="emg_improvement<%=e.right%>" style="color: #062545 !important;font-size:14pt; font-family: 'Avenir';text-align: right;padding-top: 15pt;padding-right: 15pt;">-</p>

                <%if(e.right!=''){%>
                <div id="chartemg<%=e.right%>" style="width: 250pt; height: 110pt;position: relative;left: 30pt;top:5pt;"></div>
                <%}else{%>
                <div id="chartemg<%=e.report_name%>right" style="width: 250pt; height: 110pt;position: relative;left: 30pt;top:5pt;"></div>
                <%}%>

                <img src="/icons/SVG/overall_g_label_new.png" style="position: relative; width:200pt; height:12pt;top:20pt;left:50pt">
              </div>

               <!-- ROM Graph -->
              <div style="width: 100%;height: 200pt;background-color: #FFFFFF;border: 3px solid #D4D4D4 ;border-width:  0px 0px 3px 0px;">
                <p style="color: #062545 !important;font-size:14pt; font-family: 'Avenir';text-align: left;padding-top: 15pt;padding-left: 15pt;float:left"> ROM (°)</p>

                <%if(e.right!=''){%>
                <img id="rom_icon<%=e.right%>" style="width:16pt; height:16pt;float:right;position:relative; right:60pt;top:15pt;">
                <%}else{%>
                <img id="rom_icon<%=e.report_name%>right" style="width:16pt; height:16pt;float:right;position:relative; right:60pt;top:15pt;">
                <%}%>

                <p id="rom_improvement<%=e.right%>" style="color: #062545 !important;font-size:14pt; font-family: 'Avenir';text-align: right;padding-top: 15pt;padding-right: 15pt;">-</p>
                <%if(e.right!=''){%>
                <div id="chartrom<%=e.right%>" style="width: 250pt; height: 110pt;position: relative;left: 30pt;top:5pt;"></div>
                <%}else{%>
                <div id="chartrom<%=e.report_name%>right" style="width: 250pt; height: 110pt;position: relative;left: 30pt;top:5pt;"></div>
                <%}%>
                <img src="/icons/SVG/overall_g_label_new.png" style="position: relative; width:200pt; height:12pt;top:20pt;left:50pt">
              </div>

              <!-- Idea ROM -->
              <div style="width: 100%;height: 41pt;background-color: #FFFFFF;border: 3px solid #D4D4D4 ;border-width:  0px 3px 3px 0px;display: flex;flex-direction:row;">

                <div style="width: 50%;height: 41pt;background-color: #FFFFFF;border: 3px solid #D4D4D4 ;border-width:  0px 3px 3px 0px;">
                   <p style="color: #062545 !important;font-size:10pt; font-family: 'Avenir';text-align: left;padding-top: 15pt;padding-left: 15pt;float:left"> Ideal ROM:</p>
                    <p style="color: #062545 !important;font-size:14pt; font-family: 'Avenir';text-align: right;padding-top: 10pt;padding-left: 5pt;float:left">0° to <%=joint_range(e.bodypart.toLowerCase(),e.exercisename.toLowerCase())%>°</p>
                </div>
                <div style="width: 50%;height: 41pt;background-color: #FFFFFF;border: 3px solid #D4D4D4 ;border-width:  0px 0px 3px 0px;">
                  
                  <p style="color: #062545 !important;font-size:10pt; font-family: 'Avenir';text-align: left;padding-top: 15pt;padding-left: 5pt;float:left"> Current ROM:</p>
                    <p id="current_rom<%=e.report_name%>right" style="color: #062545 !important;font-size:14pt; font-family: 'Avenir';text-align: right;padding-top: 10pt;padding-left: 5pt;float:left">-</p>

                </div>
              </div>

              <!-- Spped -->
              <div style="width: 100%;height:81pt;background-color: #FFFFFF;border: 3px solid #D4D4D4 ;border-width:  0px 3px 3px 0px;">
                <p style="color: #062545 !important;font-size:14pt; font-family: 'Avenir';text-align: left;padding-top: 5pt;padding-left: 15pt;float:left"> Speed (secs/rep)</p>
                <%if(e.right!=''){%>
                <div id="chartspeed<%=e.right%>" style="width: 35%; height: 90%;float:left;position:relative;top:0pt;"></div>
                <%}%>
              </div>
              <!-- Active time -->
              <div style="width: 100%;height: 83.5pt;background-color: #FFFFFF;border: 3px solid #D4D4D4 ;border-width:  0px 3px 3px 0px;">
                <p style="color: #062545 !important;font-size:14pt; font-family: 'Avenir';text-align: left;padding-top: 5pt;padding-left: 15pt;float:left">Active Time (s)</p>
                 <%if(e.right!=''){%>
                <div id="chartactivetime<%=e.right%>" style="width: 35%; height: 90%;float:left;position:relative;top:0pt;"></div>
                <%}%>
              </div>
            </div>
            <!-- RIGHT DETAILS END -->
           

          </div>
           <!-- FOOTER-->
            <div style="width: 100%;height: 31.8pt;background-color:#062444 !important;position: relative;top: 2pt;display: flex;flex-direction: row;">

              <div>
           <p style="color:#FFFFFF !important;text-align: left;font-size:11pt; font-family: 'Avenir';top:5pt;position: relative;left: 5pt;"> <%= new Date(today).toDateString().split(' ').slice(1).join(' ')%> </p>
            </div>


               <div>
            <p style="color:#FFFFFF !important;text-align: center;font-size:11pt; font-family: 'Avenir';top:5pt;position: relative;left:200pt;"> <%if(details[0].phiziopatients[0].patientgender.toLowerCase() == 'male'){%>Mr. <%}else {%> Ms. <%}%> <%= details[0].phiziopatients[0].patientname.substr(0,1).toUpperCase()%><%= details[0].phiziopatients[0].patientname.substr(1,details[0].phiziopatients[0].patientname.length)%> </p>
            </div>


              <div>
             <script type="text/javascript">
              <%=page_inside = page_inside+1;%>
              </script>
            <p style="color:#FFFFFF !important;text-align: right;font-size:11pt; font-family: 'Avenir';top:5pt;right:5pt;position: relative;left:435pt;"> Page <%=page_inside%>/<%=page_count+2%> </p>  
            </div>

           

           


            </div>

         

    <%}%>
<script type="text/javascript">


  
 google.charts.load('current', {'packages':['corechart']});
      google.charts.setOnLoadCallback(drawChart_new);
      function drawChart_new() {
        if(date_list.length > 1)
        {
        //Left Speed Graph
         var data = new google.visualization.DataTable();
      data.addColumn('number', 'X');
      data.addColumn('number', 'Engagement');
     
      for(var i=0; i<date_list.length;i++){
      data.addRows([
        [i, final_heldon[date_list[i]].engagement]
      ]);
      }
      
      var options = {
         legend: 'none',
          chartArea: {
          
          top:10,
          width:"86%",
          height:"75%",
          backgroundColor: {
            stroke: 'transparent',
            
          }
        },
        hAxis: {
          textPosition: 'none' ,
          gridlines: {
            color: 'transparent',
          },
          baselineColor: 'transparent'
        },
        vAxis: {
          textPosition: 'none' ,
          gridlines: {
            color: 'transparent',
          },
          baselineColor: 'transparent'
        }
      };
      var chartactivity = new google.visualization.LineChart(document.getElementById('chartactivity'));
      chartactivity.draw(data, options);
      }
      document.getElementById("overall_improvement").innerHTML = Math.abs(overall_improvement) + 'uV';
      if(overall_improvement>0)
      {
      
        document.getElementById("overall_improvement_icon").src="/icons/Up arrow.svg";
      }else if(overall_improvement<0)
      {
         document.getElementById("overall_improvement_icon").src="/icons/Down arrow.svg";
      }
      else  document.getElementById("overall_improvement_icon").src="/icons/blank.svg";
      // Activity Status
      document.getElementById("activitystatus").innerHTML = activitystatus_string;
      }


    // Left EMG and ROM
    if('<%=e.left%>' != ''){
    if(('<%=e.left%>' in template)){

      //Left Rating Consistency
if(template['<%=e.left%>'].consistency.length>1)
{
  if(template['<%=e.left%>'].consistency[template['<%=e.left%>'].consistency.length-1] > template['<%=e.left%>'].consistency[template['<%=e.left%>'].consistency.length-2])
  {
    document.getElementById("consistency_icon<%=e.left%>").src="/icons/Up arrow.svg";
  }
  else if(template['<%=e.left%>'].consistency[template['<%=e.left%>'].consistency.length-1] < template['<%=e.left%>'].consistency[template['<%=e.left%>'].consistency.length-2])
  {
    document.getElementById("consistency_icon<%=e.left%>").src="/icons/Down arrow.svg";
  }
  else{
  document.getElementById("consistency_icon<%=e.left%>").src="/icons/blank.svg";
  }
}else document.getElementById("consistency_icon<%=e.left%>").src="/icons/blank.svg"; 
var consistency_value = template['<%=e.left%>'].consistency[template['<%=e.left%>'].consistency.length-1];
      if(consistency_value ==1){
 document.getElementById("consistency_rating<%=e.left%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
} else if(consistency_value ==2){
 document.getElementById("consistency_rating<%=e.left%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
} else if(consistency_value ==3){
 document.getElementById("consistency_rating<%=e.left%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
} else if(consistency_value ==4){
 document.getElementById("consistency_rating<%=e.left%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star unchecked"></span>'
}else if(consistency_value ==5){
 document.getElementById("consistency_rating<%=e.left%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span>'
}
else{
 document.getElementById("consistency_rating<%=e.left%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
}
//Left Control Rating
if(template['<%=e.left%>'].controlled.length>1)
{
  if(template['<%=e.left%>'].controlled[template['<%=e.left%>'].controlled.length-1] > template['<%=e.left%>'].controlled[template['<%=e.left%>'].controlled.length-2])
  {
    document.getElementById("controlled_icon<%=e.left%>").src="/icons/Up arrow.svg";
  }
  else if(template['<%=e.left%>'].controlled[template['<%=e.left%>'].controlled.length-1] < template['<%=e.left%>'].controlled[template['<%=e.left%>'].controlled.length-2])
  {
    document.getElementById("controlled_icon<%=e.left%>").src="/icons/Down arrow.svg";
  }
  else{
  document.getElementById("controlled_icon<%=e.left%>").src="/icons/blank.svg";
  }
}else document.getElementById("controlled_icon<%=e.left%>").src="/icons/blank.svg"; 
var controlled_value = template['<%=e.left%>'].controlled[template['<%=e.left%>'].controlled.length-1];
if(controlled_value ==1){
 document.getElementById("controlled_rating<%=e.left%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
}else if(controlled_value ==2){
 document.getElementById("controlled_rating<%=e.left%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
}else if(controlled_value ==3){
 document.getElementById("controlled_rating<%=e.left%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
}else if(controlled_value ==4){
 document.getElementById("controlled_rating<%=e.left%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star unchecked"></span>'
}else if(controlled_value >=5){
 document.getElementById("controlled_rating<%=e.left%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span>'
}else{
 document.getElementById("controlled_rating<%=e.left%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
}
// End
//Left Smoothness Rating
if(template['<%=e.left%>'].smoothness.length>1)
{
  if(template['<%=e.left%>'].smoothness[template['<%=e.left%>'].smoothness.length-1] > template['<%=e.left%>'].smoothness[template['<%=e.left%>'].smoothness.length-2])
  {
    document.getElementById("smoothness_icon<%=e.left%>").src="/icons/Up arrow.svg";
  }
  else if(template['<%=e.left%>'].smoothness[template['<%=e.left%>'].smoothness.length-1] < template['<%=e.left%>'].smoothness[template['<%=e.left%>'].smoothness.length-2])
  {
    document.getElementById("smoothness_icon<%=e.left%>").src="/icons/Down arrow.svg";
  }
  else{
  document.getElementById("smoothness_icon<%=e.left%>").src="/icons/blank.svg";
  }
}else document.getElementById("smoothness_icon<%=e.left%>").src="/icons/blank.svg"; 
var smoothness_value = template['<%=e.left%>'].smoothness[template['<%=e.left%>'].smoothness.length-1];
if(smoothness_value ==1){
 document.getElementById("smoothness_rating<%=e.left%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
}else if(smoothness_value ==2){
 document.getElementById("smoothness_rating<%=e.left%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
}else if(smoothness_value ==3){
 document.getElementById("smoothness_rating<%=e.left%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
}else if(smoothness_value ==4){
 document.getElementById("smoothness_rating<%=e.left%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star unchecked"></span>'
}else if(smoothness_value >=5){
 document.getElementById("smoothness_rating<%=e.left%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span>'
}else{
 document.getElementById("smoothness_rating<%=e.left%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
}
// End

 
     google.charts.load('current', {'packages':['corechart']});
      google.charts.setOnLoadCallback(drawChart);

      function drawChart() {

        //Left Speed Graph
         var data = new google.visualization.DataTable();
      data.addColumn('number', 'X');
      data.addColumn('number', 'Velocity');
      for(var i=0; i<template['<%=e.left%>'].velocity.length;i++){
      data.addRows([
        [i, template['<%=e.left%>'].velocity[i]]
      ]);
      }
      var options = {
         legend: 'none',
          chartArea: {
          
          top:10,
          width:"86%",
          height:"75%",
          backgroundColor: {
            stroke: 'transparent',
            
          }
        },
        hAxis: {
          textPosition: 'none' ,
          gridlines: {
            color: 'transparent',
          },
          baselineColor: 'transparent'
        },
        vAxis: {
          textPosition: 'none' ,
          gridlines: {
            color: 'transparent',
          },
          baselineColor: 'transparent'
        }
      };
      var chartspeed<%=e.left%> = new google.visualization.LineChart(document.getElementById('chartspeed<%=e.left%>'));
      chartspeed<%=e.left%>.draw(data, options);
      // Left Active Time
          var data = new google.visualization.DataTable();
      data.addColumn('number', 'X');
      data.addColumn('number', 'Active time');
      
      for(var i=0; i<template['<%=e.left%>'].activetime_secs.length;i++){
      data.addRows([
        [i, template['<%=e.left%>'].activetime_secs[i]]
      ]);
      }
      var options = {
         legend: 'none',
          chartArea: {
          
          top:10,
          width:"86%",
          height:"75%",
          backgroundColor: {
            stroke: 'transparent',
            
          }
        },
        hAxis: {
          textPosition: 'none' ,
          gridlines: {
            color: 'transparent',
          },
          baselineColor: 'transparent'
        },
        vAxis: {
          textPosition: 'none' ,
          gridlines: {
            color: 'transparent',
          },
          baselineColor: 'transparent'
        }
      };
      var chartactivetime<%=e.left%> = new google.visualization.LineChart(document.getElementById('chartactivetime<%=e.left%>'));
      chartactivetime<%=e.left%>.draw(data, options);

        //EMG - LEFT

       var data = new google.visualization.DataTable();
       var emgMax<%=e.left%> = 0;

      var emg_max_list<%=e.left%> = [];
      var rom_min_max_list<%=e.left%> = [];

      data.addColumn('number', 'date');
      data.addColumn('number', 'Emg');
    data.addColumn({type: 'string', role: 'style'});


    

    for(var i=0;i<<%=numofdays %>;i++){
      if(template['<%=e.left%>'].dataset.emg[i].max == null)
      {

      
      }else if(template['<%=e.left%>'].dataset.emg[i].sessiontype !=""){

        // Selecting the Color of the graph.
        var emg_color = 'white'
         if(template['<%=e.left%>'].dataset.emg[i].sessiontype.toLowerCase() == 'passive')
         {
            //Red
            emg_color = 'color: #EE5656';
         }else if(template['<%=e.left%>'].dataset.emg[i].sessiontype.toLowerCase() == 'assistive')
         {
            //Yellow
            emg_color = 'color: #E5AA3C';
         } else if(template['<%=e.left%>'].dataset.emg[i].sessiontype.toLowerCase() == 'active')
         {
            //Blue
            emg_color = 'color: #54AFE4';
         }
         else if(template['<%=e.left%>'].dataset.emg[i].sessiontype.toLowerCase() == 'resistive')
         {
            //Green
            emg_color = 'color: #00B386';
         }
        data.addRows([[parseInt(template['<%=e.left%>'].dataset.emg[i].date),parseInt(template['<%=e.left%>'].dataset.emg[i].max),emg_color]]);
        emg_max_list<%=e.left%>.push(parseInt(template['<%=e.left%>'].dataset.emg[i].max));
      
        if(parseInt(template['<%=e.left%>'].dataset.emg[i].max) > emgMax<%=e.left%>)
        {
          emgMax<%=e.left%> =  parseInt(template['<%=e.left%>'].dataset.emg[i].max);
        }
      }
    }
    if(emg_max_list<%=e.left%>.length>1){
    // Getting EMG improvement:
    document.getElementById("emg_improvement<%=e.left%>").innerHTML = Math.abs(increasedEmg(emg_max_list<%=e.left%>[emg_max_list<%=e.left%>.length - 1],emg_max_list<%=e.left%>[emg_max_list<%=e.left%>.length - 2])) + "uV";
    
    if(increasedEmg(emg_max_list<%=e.left%>[emg_max_list<%=e.left%>.length - 1],emg_max_list<%=e.left%>[emg_max_list<%=e.left%>.length - 2]) > 0)
    {
      document.getElementById("emg_icon<%=e.left%>").src="/icons/Up arrow.svg";
      document.getElementById("emg_table<%=e.report_name%><%=e.orientation.toLowerCase()%>").innerHTML = '<img src="/icons/Up arrow.svg" style="width:16pt; height:16pt;position:relative;top:3pt;">'+increasedEmg(emg_max_list<%=e.left%>[emg_max_list<%=e.left%>.length - 1],emg_max_list<%=e.left%>[emg_max_list<%=e.left%>.length - 2])+"uV";
    }else if(increasedEmg(emg_max_list<%=e.left%>[emg_max_list<%=e.left%>.length - 1],emg_max_list<%=e.left%>[emg_max_list<%=e.left%>.length - 2]) < 0)
    {
      document.getElementById("emg_icon<%=e.left%>").src="/icons/Down arrow.svg";
      document.getElementById("emg_table<%=e.report_name%><%=e.orientation.toLowerCase()%>").innerHTML = '<img src="/icons/Down arrow.svg" style="width:16pt; height:16pt;position:relative;top:3pt;">'+Math.abs(increasedEmg(emg_max_list<%=e.left%>[emg_max_list<%=e.left%>.length - 1],emg_max_list<%=e.left%>[emg_max_list<%=e.left%>.length - 2]))+"uV";
    }else document.getElementById("emg_icon<%=e.left%>").src="/icons/blank.svg";
    } else document.getElementById("emg_icon<%=e.left%>").src="/icons/blank.svg";
    emgMax<%=e.left%> = emgMax<%=e.left%> + 10;

    if(emg_max_list<%=e.left%>.length>1){
    overall_improvement = overall_improvement+increasedEmg(emg_max_list<%=e.left%>[emg_max_list<%=e.left%>.length - 1],emg_max_list<%=e.left%>[emg_max_list<%=e.left%>.length - 2]);

    }
    

        var options = {
           legend: 'none',
          chartArea: {
          
          top:10,
          width:"86%",
          height:"75%",
          backgroundColor: {
            stroke: '#D4D4D4',
            strokeWidth: 1
          }
        },
         pointSize: 5,
        series: {
          0: { areaOpacity: 0.5,pointShape: 'circle'},
          1: { areaOpacity: 1,pointShape: 'circle'}
          },
    
          colors:['red','white'],
          
          hAxis: {
            viewWindow: {
              min: 0,
              max: <%=numofdays %>
              },
            title: 'Days',  
            
            gridlines: {
              color: 'transparent'
            },
            baselineColor: '#D4D4D4'
            },

          vAxis: {minValue: 0,
            viewWindow: {
              min: 0,
              max: emgMax<%=e.left%>
              },
           gridlines: {
            color: 'transparent',
          },
          baselineColor: '#D4D4D4'}
        };
    

        var chartemg<%=e.left%> = new google.visualization.AreaChart(document.getElementById('chartemg<%=e.left%>'));
        chartemg<%=e.left%>.draw(data, options);

        // ROM - LEFT

         var data = new google.visualization.DataTable();
         var romMax<%=e.left%> = -360;
        var romMin<%=e.left%> = 360;
      data.addColumn('number', 'date');
      data.addColumn('number', 'rommax');
    data.addColumn({type: 'string', role: 'style'});
    data.addColumn('number', 'rommin');
    data.addColumn({type: 'string', role: 'style'});
    data.addColumn('number', 'romoffset');
    data.addColumn({type: 'string', role: 'style'});

    

    for(var i=0;i<<%=numofdays %>;i++){
      if(template['<%=e.left%>'].dataset.rom[i].max == null)
      {

      
      }else if(template['<%=e.left%>'].dataset.rom[i].sessiontype !=""){


        // Selecting the Color of the graph.
        var rom_color = 'white'
         if(template['<%=e.left%>'].dataset.rom[i].sessiontype.toLowerCase() == 'passive')
         {
            //Red
            rom_color = 'color: #EE5656';
         }else if(template['<%=e.left%>'].dataset.rom[i].sessiontype.toLowerCase() == 'assistive')
         {
            //Yellow
            rom_color = 'color: #E5AA3C';
         } else if(template['<%=e.left%>'].dataset.rom[i].sessiontype.toLowerCase() == 'active')
         {
            //Blue
            rom_color = 'color: #54AFE4';
         }else if(template['<%=e.left%>'].dataset.rom[i].sessiontype.toLowerCase() == 'resistive')
         {
            //Green
            rom_color = 'color: #00B386';
         }
              // Color for the graph
        if(template['<%=e.left%>'].dataset.rom[i].min<0)
        {
          var color_min = rom_color;
        }else var color_min = 'color: white';
      
        data.addRows([[parseInt(template['<%=e.left%>'].dataset.rom[i].date),parseInt(template['<%=e.left%>'].dataset.rom[i].max),rom_color,parseInt(template['<%=e.left%>'].dataset.rom[i].min), color_min,parseInt(template['<%=e.left%>'].dataset.rom[i].min), rom_color]]);
        rom_min_max_list<%=e.left%>.push([parseInt(template['<%=e.left%>'].dataset.rom[i].min),parseInt(template['<%=e.left%>'].dataset.rom[i].max)]);
      
      if(parseInt(template['<%=e.left%>'].dataset.rom[i].min) < romMin<%=e.left%>)
      {
       romMin<%=e.left%> =  parseInt(template['<%=e.left%>'].dataset.rom[i].min);
      }
      if(parseInt(template['<%=e.left%>'].dataset.rom[i].max) > romMax<%=e.left%>)
      {
       romMax<%=e.left%> =  parseInt(template['<%=e.left%>'].dataset.rom[i].max);
      }
      }
    }
    if(rom_min_max_list<%=e.left%>.length > 1)
    {
      document.getElementById("current_rom<%=e.report_name%>left").innerHTML = parseInt(rom_min_max_list<%=e.left%>[rom_min_max_list<%=e.left%>.length - 1][0])+ "°" +' to '+parseInt(rom_min_max_list<%=e.left%>[rom_min_max_list<%=e.left%>.length - 1][1])+ "°";
    // Getting ROM LEFT improvement:
    //rom_min_max_list<%=e.left%>[rom_min_max_list<%=e.left%>.length - 1]
    document.getElementById("rom_improvement<%=e.left%>").innerHTML = Math.abs(increasedRom(rom_min_max_list<%=e.left%>[rom_min_max_list<%=e.left%>.length - 1][0],rom_min_max_list<%=e.left%>[rom_min_max_list<%=e.left%>.length - 1][1],rom_min_max_list<%=e.left%>[rom_min_max_list<%=e.left%>.length - 2][0],rom_min_max_list<%=e.left%>[rom_min_max_list<%=e.left%>.length - 2][1])) + "°";
    
    if(increasedRom(rom_min_max_list<%=e.left%>[rom_min_max_list<%=e.left%>.length - 1][0],rom_min_max_list<%=e.left%>[rom_min_max_list<%=e.left%>.length - 1][1],rom_min_max_list<%=e.left%>[rom_min_max_list<%=e.left%>.length - 2][0],rom_min_max_list<%=e.left%>[rom_min_max_list<%=e.left%>.length - 2][1]) > 0)
    {
      document.getElementById("rom_icon<%=e.left%>").src="/icons/Up arrow.svg";
      document.getElementById("rom_table<%=e.report_name%><%=e.orientation.toLowerCase()%>").innerHTML = '<img src="/icons/Up arrow.svg" style="width:16pt; height:16pt;position:relative;top:3pt;">'+increasedRom(rom_min_max_list<%=e.left%>[rom_min_max_list<%=e.left%>.length - 1][0],rom_min_max_list<%=e.left%>[rom_min_max_list<%=e.left%>.length - 1][1],rom_min_max_list<%=e.left%>[rom_min_max_list<%=e.left%>.length - 2][0],rom_min_max_list<%=e.left%>[rom_min_max_list<%=e.left%>.length - 2][1])+"°";
    }else if(increasedRom(rom_min_max_list<%=e.left%>[rom_min_max_list<%=e.left%>.length - 1][0],rom_min_max_list<%=e.left%>[rom_min_max_list<%=e.left%>.length - 1][1],rom_min_max_list<%=e.left%>[rom_min_max_list<%=e.left%>.length - 2][0],rom_min_max_list<%=e.left%>[rom_min_max_list<%=e.left%>.length - 2][1]) < 0)
    {
      document.getElementById("rom_icon<%=e.left%>").src="/icons/Down arrow.svg";
      document.getElementById("rom_table<%=e.report_name%><%=e.orientation.toLowerCase()%>").innerHTML = '<img src="/icons/Down arrow.svg" style="width:16pt; height:16pt;position:relative;top:3pt;">'+Math.abs(increasedRom(rom_min_max_list<%=e.left%>[rom_min_max_list<%=e.left%>.length - 1][0],rom_min_max_list<%=e.left%>[rom_min_max_list<%=e.left%>.length - 1][1],rom_min_max_list<%=e.left%>[rom_min_max_list<%=e.left%>.length - 2][0],rom_min_max_list<%=e.left%>[rom_min_max_list<%=e.left%>.length - 2][1]))+"°";
    }else document.getElementById("rom_icon<%=e.left%>").src="/icons/blank.svg";
    } else document.getElementById("rom_icon<%=e.left%>").src="/icons/blank.svg";
    romMax<%=e.left%> = romMax<%=e.left%> + 10;
    romMin<%=e.left%> = romMin<%=e.left%> - 10;
    


    
    

        var options = {
           legend: 'none',
          chartArea: {
          
          top:10,
          width:"86%",
          height:"75%",
          backgroundColor: {
            stroke: '#D4D4D4',
            strokeWidth: 1
          }
        },
         pointSize: 5,
        series: {
          0: { areaOpacity: 0.5,pointShape: 'circle'},
          1: { areaOpacity: 1,pointShape: 'circle'},
          2: { areaOpacity: 0,pointShape: 'circle'}
          },
    
          colors:['red','white'],
          
          hAxis: {
            viewWindow: {
              min: 0,
              max: <%=numofdays %>
              },
            title: 'Days',  
            
            gridlines: {
              color: 'transparent'
            },
            baselineColor: '#D4D4D4'
            },

          vAxis: {minValue: 0,
            viewWindow: {
              min: romMin<%=e.left%>,
              max: romMax<%=e.left%>
              },
           gridlines: {
            color: 'transparent',
          },
          baselineColor: '#D4D4D4'}
        };
    

        var chartrom<%=e.left%> = new google.visualization.AreaChart(document.getElementById('chartrom<%=e.left%>'));
        chartrom<%=e.left%>.draw(data, options);

      }
    }
    }// Left EMG and ROM
    else if('<%=e.left%>' == ''){
    
 
     google.charts.load('current', {'packages':['corechart']});
      google.charts.setOnLoadCallback(drawChart);

      function drawChart() {

        //EMG - LEFT

       var data = new google.visualization.DataTable();
       var emgMax<%=e.left%> = 0;

      var emg_max_list<%=e.left%> = [];
      var rom_min_max_list<%=e.left%> = [];

      data.addColumn('number', 'date');
      data.addColumn('number', 'Emg');
    data.addColumn({type: 'string', role: 'style'});


    

    document.getElementById("emg_icon<%=e.report_name%>left").src="/icons/blank.svg";
    emgMax<%=e.left%> = 10;


    
    

        var options = {
           legend: 'none',
          chartArea: {
          
          top:10,
          width:"86%",
          height:"75%",
          backgroundColor: {
            stroke: '#D4D4D4',
            strokeWidth: 1
          }
        },
         pointSize: 5,
        series: {
          0: { areaOpacity: 0.5,pointShape: 'circle'},
          1: { areaOpacity: 1,pointShape: 'circle'}
          },
    
          colors:['red','white'],
          
          hAxis: {
            viewWindow: {
              min: 0,
              max: <%=numofdays %>
              },
            title: 'Days',  
            
            gridlines: {
              color: 'transparent'
            },
            baselineColor: '#D4D4D4'
            },

          vAxis: {minValue: 0,
            viewWindow: {
              min: 0,
              max: emgMax<%=e.left%>
              },
           gridlines: {
            color: 'transparent',
          },
          baselineColor: '#D4D4D4'}
        };
    

        var chartemg<%=e.left%> = new google.visualization.AreaChart(document.getElementById('chartemg<%=e.report_name%>left'));
        chartemg<%=e.left%>.draw(data, options);

        // ROM - LEFT

         var data = new google.visualization.DataTable();
         var romMax<%=e.left%> = -360;
        var romMin<%=e.left%> = 360;
      data.addColumn('number', 'date');
      data.addColumn('number', 'rommax');
    data.addColumn({type: 'string', role: 'style'});
    data.addColumn('number', 'rommin');
    data.addColumn({type: 'string', role: 'style'});
    data.addColumn('number', 'romoffset');
    data.addColumn({type: 'string', role: 'style'});

    




  document.getElementById("rom_icon<%=e.report_name%>left").src="/icons/blank.svg";
    romMax<%=e.left%> = romMax<%=e.left%> + 10;
    romMin<%=e.left%> = 0;


    
    

        var options = {
           legend: 'none',
          chartArea: {
          
          top:10,
          width:"86%",
          height:"75%",
          backgroundColor: {
            stroke: '#D4D4D4',
            strokeWidth: 1
          }
        },
         pointSize: 5,
        series: {
          0: { areaOpacity: 0.5,pointShape: 'circle'},
          1: { areaOpacity: 1,pointShape: 'circle'},
          2: { areaOpacity: 0,pointShape: 'circle'}
          },
    
          colors:['red','white'],
          
          hAxis: {
            viewWindow: {
              min: 0,
              max: <%=numofdays %>
              },
            title: 'Days',  
            
            gridlines: {
              color: 'transparent'
            },
            baselineColor: '#D4D4D4'
            },

          vAxis: {minValue: 0,
            viewWindow: {
              min: romMin<%=e.left%>,
              max: romMax<%=e.left%>
              },
           gridlines: {
            color: 'transparent',
          },
          baselineColor: '#D4D4D4'}
        };
    

        var chartrom<%=e.left%> = new google.visualization.AreaChart(document.getElementById('chartrom<%=e.report_name%>left'));
        chartrom<%=e.left%>.draw(data, options);

      }
    
    }


    // RIGH EMG and ROM
     
    if('<%=e.right%>' != ''){
    if(('<%=e.right%>' in template)){

        //Right Rating Consistency
if(template['<%=e.right%>'].consistency.length>1)
{
  if(template['<%=e.right%>'].consistency[template['<%=e.right%>'].consistency.length-1] > template['<%=e.right%>'].consistency[template['<%=e.right%>'].consistency.length-2])
  {
    document.getElementById("consistency_icon<%=e.right%>").src="/icons/Up arrow.svg";
  }
  else if(template['<%=e.right%>'].consistency[template['<%=e.right%>'].consistency.length-1] < template['<%=e.right%>'].consistency[template['<%=e.right%>'].consistency.length-2])
  {
    document.getElementById("consistency_icon<%=e.right%>").src="/icons/Down arrow.svg";
  }
  else{
  document.getElementById("consistency_icon<%=e.right%>").src="/icons/blank.svg";
  }
}else document.getElementById("consistency_icon<%=e.right%>").src="/icons/blank.svg"; 
      var consistency_value = template['<%=e.right%>'].consistency[template['<%=e.right%>'].consistency.length-1];
      if(consistency_value ==1){
 document.getElementById("consistency_rating<%=e.right%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
} else if(consistency_value ==2){
 document.getElementById("consistency_rating<%=e.right%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
} else if(consistency_value ==3){
 document.getElementById("consistency_rating<%=e.right%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
} else if(consistency_value ==4){
 document.getElementById("consistency_rating<%=e.right%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star unchecked"></span>'
}else if(consistency_value ==5){
 document.getElementById("consistency_rating<%=e.right%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span>'
}
else{
 document.getElementById("consistency_rating<%=e.right%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
}
// End Consistency Rating

//Right Control Rating
if(template['<%=e.right%>'].controlled.length>1)
{
  if(template['<%=e.right%>'].controlled[template['<%=e.right%>'].controlled.length-1] > template['<%=e.right%>'].controlled[template['<%=e.right%>'].controlled.length-2])
  {
    document.getElementById("controlled_icon<%=e.right%>").src="/icons/Up arrow.svg";
  }
  else if(template['<%=e.right%>'].controlled[template['<%=e.right%>'].controlled.length-1] < template['<%=e.right%>'].controlled[template['<%=e.right%>'].controlled.length-2])
  {
    document.getElementById("controlled_icon<%=e.right%>").src="/icons/Down arrow.svg";
  }
  else{
  document.getElementById("controlled_icon<%=e.right%>").src="/icons/blank.svg";
  }
}else document.getElementById("controlled_icon<%=e.right%>").src="/icons/blank.svg"; 
var controlled_value = template['<%=e.right%>'].controlled[template['<%=e.right%>'].controlled.length-1];
if(controlled_value ==1){
 document.getElementById("controlled_rating<%=e.right%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
}else if(controlled_value ==2){
 document.getElementById("controlled_rating<%=e.right%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
}else if(controlled_value ==3){
 document.getElementById("controlled_rating<%=e.right%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
}else if(controlled_value ==4){
 document.getElementById("controlled_rating<%=e.right%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star unchecked"></span>'
}else if(controlled_value >=5){
 document.getElementById("controlled_rating<%=e.right%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span>'
}else{
 document.getElementById("controlled_rating<%=e.right%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
}
// End
//Right Smoothness Rating
if(template['<%=e.right%>'].smoothness.length>1)
{
  if(template['<%=e.right%>'].smoothness[template['<%=e.right%>'].smoothness.length-1] > template['<%=e.right%>'].smoothness[template['<%=e.right%>'].smoothness.length-2])
  {
    document.getElementById("smoothness_icon<%=e.right%>").src="/icons/Up arrow.svg";
  }
  else if(template['<%=e.right%>'].smoothness[template['<%=e.right%>'].smoothness.length-1] < template['<%=e.right%>'].smoothness[template['<%=e.right%>'].smoothness.length-2])
  {
    document.getElementById("smoothness_icon<%=e.right%>").src="/icons/Down arrow.svg";
  }
  else{
  document.getElementById("smoothness_icon<%=e.right%>").src="/icons/blank.svg";
  }
}else document.getElementById("smoothness_icon<%=e.right%>").src="/icons/blank.svg"; 
var smoothness_value = template['<%=e.right%>'].smoothness[template['<%=e.right%>'].smoothness.length-1];
if(smoothness_value ==1){
 document.getElementById("smoothness_rating<%=e.right%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
}else if(smoothness_value ==2){
 document.getElementById("smoothness_rating<%=e.right%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
}else if(smoothness_value ==3){
 document.getElementById("smoothness_rating<%=e.right%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
}else if(smoothness_value ==4){
 document.getElementById("smoothness_rating<%=e.right%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star unchecked"></span>'
}else if(smoothness_value >=5){
 document.getElementById("smoothness_rating<%=e.right%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span><span class="fa fa-star checked"></span>'
}else{
 document.getElementById("smoothness_rating<%=e.right%>").innerHTML = '<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> <span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span><span class="fa fa-star unchecked"></span>'
}
// End



      //EMG - RIGHT
 
     google.charts.load('current', {'packages':['corechart']});
      google.charts.setOnLoadCallback(drawChart);

      function drawChart() {

//Right Speed Graph
         var data = new google.visualization.DataTable();
      data.addColumn('number', 'X');
      data.addColumn('number', 'Velocity');
      for(var i=0; i<template['<%=e.right%>'].velocity.length;i++){
      data.addRows([
        [i, template['<%=e.right%>'].velocity[i]]
      ]);
      }
      var options = {
         legend: 'none',
          chartArea: {
          
          top:10,
          width:"86%",
          height:"75%",
          backgroundColor: {
            stroke: 'transparent',
            
          }
        },
        hAxis: {
          textPosition: 'none' ,
          gridlines: {
            color: 'transparent',
          },
          baselineColor: 'transparent'
        },
        vAxis: {
          textPosition: 'none' ,
          gridlines: {
            color: 'transparent',
          },
          baselineColor: 'transparent'
        }
      };
      var chartspeed<%=e.right%> = new google.visualization.LineChart(document.getElementById('chartspeed<%=e.right%>'));
      chartspeed<%=e.right%>.draw(data, options);
       // Right Active Time
      var data = new google.visualization.DataTable();
      data.addColumn('number', 'X');
      data.addColumn('number', 'Active time');
      
      for(var i=0; i<template['<%=e.right%>'].activetime_secs.length;i++){
      data.addRows([
        [i, template['<%=e.right%>'].activetime_secs[i]]
      ]);
      }
      var options = {
         legend: 'none',
          chartArea: {
          
          top:10,
          width:"86%",
          height:"75%",
          backgroundColor: {
            stroke: 'transparent',
            
          }
        },
        hAxis: {
          textPosition: 'none' ,
          gridlines: {
            color: 'transparent',
          },
          baselineColor: 'transparent'
        },
        vAxis: {
          textPosition: 'none' ,
          gridlines: {
            color: 'transparent',
          },
          baselineColor: 'transparent'
        }
      };
      var chartactivetime<%=e.right%> = new google.visualization.LineChart(document.getElementById('chartactivetime<%=e.right%>'));
      chartactivetime<%=e.right%>.draw(data, options);
      // End

       var data = new google.visualization.DataTable();
       var emgMax<%=e.right%>=0;

       var emg_max_list<%=e.right%> = [];
      var rom_min_max_list<%=e.right%> = [];

      data.addColumn('number', 'date');
      data.addColumn('number', 'Emg');
    data.addColumn({type: 'string', role: 'style'});


    

    for(var i=0;i<<%=numofdays %>;i++){
      if(template['<%=e.right%>'].dataset.emg[i].max == null)
      {

      
      }else if(template['<%=e.right%>'].dataset.emg[i].sessiontype !=""){

        // Selecting the Color of the graph.
        var emg_color = 'white'
         if(template['<%=e.right%>'].dataset.emg[i].sessiontype.toLowerCase() == 'passive')
         {  
            //Red
            emg_color = 'color: #EE5656';
         }else if(template['<%=e.right%>'].dataset.emg[i].sessiontype.toLowerCase() == 'assistive')
         {  
            //Yellow
            emg_color = 'color: #E5AA3C';
         } else if(template['<%=e.right%>'].dataset.emg[i].sessiontype.toLowerCase() == 'active')
         {
            //Blue
            emg_color = 'color: #54AFE4';
         }else if(template['<%=e.right%>'].dataset.emg[i].sessiontype.toLowerCase() == 'resistive')
         {
            //Green
            emg_color = 'color: #00B386';
         }
        data.addRows([[parseInt(template['<%=e.right%>'].dataset.emg[i].date),parseInt(template['<%=e.right%>'].dataset.emg[i].max),emg_color]]);
        emg_max_list<%=e.right%>.push(parseInt(template['<%=e.right%>'].dataset.emg[i].max));
      
         if(parseInt(template['<%=e.right%>'].dataset.emg[i].max) > emgMax<%=e.right%>)
        {
          emgMax<%=e.right%> =  parseInt(template['<%=e.right%>'].dataset.emg[i].max);
        }
      }
    }
    if(emg_max_list<%=e.right%>.length>1){
    // Getting EMG improvement:
    document.getElementById("emg_improvement<%=e.right%>").innerHTML = Math.abs(increasedEmg(emg_max_list<%=e.right%>[emg_max_list<%=e.right%>.length - 1],emg_max_list<%=e.right%>[emg_max_list<%=e.right%>.length - 2])) + "uV";
    
    if(increasedEmg(emg_max_list<%=e.right%>[emg_max_list<%=e.right%>.length - 1],emg_max_list<%=e.right%>[emg_max_list<%=e.right%>.length - 2]) > 0)
    {
      document.getElementById("emg_icon<%=e.right%>").src="/icons/Up arrow.svg";
      document.getElementById("emg_table<%=e.report_name%><%=e.orientation.toLowerCase()%>").innerHTML = '<img src="/icons/Up arrow.svg" style="width:16pt; height:16pt;position:relative;top:3pt;">'+increasedEmg(emg_max_list<%=e.right%>[emg_max_list<%=e.right%>.length - 1],emg_max_list<%=e.right%>[emg_max_list<%=e.right%>.length - 2])+"uV";
    }else if(increasedEmg(emg_max_list<%=e.right%>[emg_max_list<%=e.right%>.length - 1],emg_max_list<%=e.right%>[emg_max_list<%=e.right%>.length - 2]) < 0)
    {
      document.getElementById("emg_icon<%=e.right%>").src="/icons/Down arrow.svg";
      document.getElementById("emg_table<%=e.report_name%><%=e.orientation.toLowerCase()%>").innerHTML = '<img src="/icons/Down arrow.svg" style="width:16pt; height:16pt;position:relative;top:3pt;">'+Math.abs(increasedEmg(emg_max_list<%=e.right%>[emg_max_list<%=e.right%>.length - 1],emg_max_list<%=e.right%>[emg_max_list<%=e.right%>.length - 2]))+"uV";
    }else document.getElementById("emg_icon<%=e.right%>").src="/icons/blank.svg";
    }else document.getElementById("emg_icon<%=e.right%>").src="/icons/blank.svg";
    emgMax<%=e.right%> = emgMax<%=e.right%> + 10;

     if(emg_max_list<%=e.right%>.length>1){

      overall_improvement = overall_improvement+increasedEmg(emg_max_list<%=e.right%>[emg_max_list<%=e.right%>.length - 1],emg_max_list<%=e.right%>[emg_max_list<%=e.right%>.length - 2]);
     }
    
    
        var options = {
           legend: 'none',
          chartArea: {
          
          top:10,
          width:"86%",
          height:"75%",
          backgroundColor: {
            stroke: '#D4D4D4',
            strokeWidth: 1
          }
        },
         pointSize: 5,
        series: {
          0: { areaOpacity: 0.5,pointShape: 'circle'},
          1: { areaOpacity: 1,pointShape: 'circle'}
          },
    
          colors:['red','white'],
          
          hAxis: {
            viewWindow: {
              min: 0,
              max: <%=numofdays %>
              },
            title: 'Days',  
            
            gridlines: {
              color: 'transparent'
            },
            baselineColor: '#D4D4D4'
            },
          vAxis: {minValue: 0,
            viewWindow: {
              min: 0,
              max: emgMax<%=e.right%>
              },
           gridlines: {
            color: 'transparent',
          },
          baselineColor: '#D4D4D4'}
        };
    
        var chart<%=e.right%> = new google.visualization.AreaChart(document.getElementById('chartemg<%=e.right%>'));
        chart<%=e.right%>.draw(data, options);
        // ROM - RIGHT
        var data = new google.visualization.DataTable();
        var romMax<%=e.right%> = -360;
        var romMin<%=e.right%> = 360;
      data.addColumn('number', 'date');
      data.addColumn('number', 'rommax');
    data.addColumn({type: 'string', role: 'style'});
    data.addColumn('number', 'rommin');
    data.addColumn({type: 'string', role: 'style'});
    data.addColumn('number', 'romoffset');
    data.addColumn({type: 'string', role: 'style'});
    
    for(var i=0;i<<%=numofdays %>;i++){

      if(template['<%=e.right%>'].dataset.rom[i].max == null)
      {
      
      }else if(template['<%=e.right%>'].dataset.rom[i].sessiontype !=""){
        // Selecting the Color of the graph.
        var rom_color = 'white'
         if(template['<%=e.right%>'].dataset.rom[i].sessiontype.toLowerCase() == 'passive')
         {
            //Red
            rom_color = 'color: #EE5656';
         }else if(template['<%=e.right%>'].dataset.rom[i].sessiontype.toLowerCase() == 'assistive')
         {
            // Yellow
            rom_color = 'color: #E5AA3C';
         } else if(template['<%=e.right%>'].dataset.rom[i].sessiontype.toLowerCase() == 'active')
         {
            //Blue
            rom_color = 'color: #54AFE4';
         }
         else if(template['<%=e.right%>'].dataset.rom[i].sessiontype.toLowerCase() == 'resistive')
         {
            //Green
            rom_color = 'color: #00B386';
         }
        // Color for the graph
        if(template['<%=e.right%>'].dataset.rom[i].min<0)
        {
          var color_min = rom_color;
        }else var color_min = 'color: white';
    
      
        data.addRows([[parseInt(template['<%=e.right%>'].dataset.rom[i].date),parseInt(template['<%=e.right%>'].dataset.rom[i].max),rom_color,parseInt(template['<%=e.right%>'].dataset.rom[i].min), color_min,parseInt(template['<%=e.right%>'].dataset.rom[i].min), rom_color]]);
        rom_min_max_list<%=e.right%>.push([parseInt(template['<%=e.right%>'].dataset.rom[i].min),parseInt(template['<%=e.right%>'].dataset.rom[i].max)]);
      
      if(parseInt(template['<%=e.right%>'].dataset.rom[i].min) < romMin<%=e.right%>)
      {
       romMin<%=e.right%> =  parseInt(template['<%=e.right%>'].dataset.rom[i].min);
      }
      if(parseInt(template['<%=e.right%>'].dataset.rom[i].max) > romMax<%=e.right%>)
      {
       romMax<%=e.right%> =  parseInt(template['<%=e.right%>'].dataset.rom[i].max);
      }
      }
    }
    if(rom_min_max_list<%=e.right%>.length > 1){
      document.getElementById("current_rom<%=e.report_name%>right").innerHTML = parseInt(rom_min_max_list<%=e.right%>[rom_min_max_list<%=e.right%>.length - 1][0])+ "°" +' to '+parseInt(rom_min_max_list<%=e.right%>[rom_min_max_list<%=e.right%>.length - 1][1])+ "°";
    // Getting ROM Right improvement:
    //rom_min_max_list<%=e.right%>[rom_min_max_list<%=e.right%>.length - 1]
    document.getElementById("rom_improvement<%=e.right%>").innerHTML = Math.abs(increasedRom(rom_min_max_list<%=e.right%>[rom_min_max_list<%=e.right%>.length - 1][0],rom_min_max_list<%=e.right%>[rom_min_max_list<%=e.right%>.length - 1][1],rom_min_max_list<%=e.right%>[rom_min_max_list<%=e.right%>.length - 2][0],rom_min_max_list<%=e.right%>[rom_min_max_list<%=e.right%>.length - 2][1])) + "°";
    
    if(increasedRom(rom_min_max_list<%=e.right%>[rom_min_max_list<%=e.right%>.length - 1][0],rom_min_max_list<%=e.right%>[rom_min_max_list<%=e.right%>.length - 1][1],rom_min_max_list<%=e.right%>[rom_min_max_list<%=e.right%>.length - 2][0],rom_min_max_list<%=e.right%>[rom_min_max_list<%=e.right%>.length - 2][1]) > 0)
    {
      document.getElementById("rom_icon<%=e.right%>").src="/icons/Up arrow.svg";
      document.getElementById("rom_table<%=e.report_name%><%=e.orientation.toLowerCase()%>").innerHTML = '<img src="/icons/Up arrow.svg" style="width:16pt; height:16pt;position:relative;top:3pt;">'+increasedRom(rom_min_max_list<%=e.right%>[rom_min_max_list<%=e.right%>.length - 1][0],rom_min_max_list<%=e.right%>[rom_min_max_list<%=e.right%>.length - 1][1],rom_min_max_list<%=e.right%>[rom_min_max_list<%=e.right%>.length - 2][0],rom_min_max_list<%=e.right%>[rom_min_max_list<%=e.right%>.length - 2][1])+"°";
    }else if(increasedRom(rom_min_max_list<%=e.right%>[rom_min_max_list<%=e.right%>.length - 1][0],rom_min_max_list<%=e.right%>[rom_min_max_list<%=e.right%>.length - 1][1],rom_min_max_list<%=e.right%>[rom_min_max_list<%=e.right%>.length - 2][0],rom_min_max_list<%=e.right%>[rom_min_max_list<%=e.right%>.length - 2][1]) < 0)
    {
      document.getElementById("rom_icon<%=e.right%>").src="/icons/Down arrow.svg";
      document.getElementById("rom_table<%=e.report_name%><%=e.orientation.toLowerCase()%>").innerHTML = '<img src="/icons/Down arrow.svg" style="width:16pt; height:16pt;position:relative;top:3pt;">'+Math.abs(increasedRom(rom_min_max_list<%=e.right%>[rom_min_max_list<%=e.right%>.length - 1][0],rom_min_max_list<%=e.right%>[rom_min_max_list<%=e.right%>.length - 1][1],rom_min_max_list<%=e.right%>[rom_min_max_list<%=e.right%>.length - 2][0],rom_min_max_list<%=e.right%>[rom_min_max_list<%=e.right%>.length - 2][1]))+"°";
    }else document.getElementById("rom_icon<%=e.right%>").src="/icons/blank.svg";
    }else document.getElementById("rom_icon<%=e.right%>").src="/icons/blank.svg";
    romMax<%=e.right%> = romMax<%=e.right%> + 10;
    romMin<%=e.right%> = romMin<%=e.right%> - 10;
     
    
    
        var options = {
           legend: 'none',
          chartArea: {
          
          top:10,
          width:"86%",
          height:"75%",
          backgroundColor: {
            stroke: '#D4D4D4',
            strokeWidth: 1
          }
        },
         pointSize: 5,
        series: {
          0: { areaOpacity: 0.5,pointShape: 'circle'},
          1: { areaOpacity: 1,pointShape: 'circle'},
          2: { areaOpacity: 0,pointShape: 'circle'}
          },
    
          colors:['red','white'],
          
          hAxis: {
            viewWindow: {
              min: 0,
              max: <%=numofdays %>
              },
            title: 'Days',  
            
            gridlines: {
              color: 'transparent'
            },
            baselineColor: '#D4D4D4'
            },
          vAxis: {minValue: 0,
            viewWindow: {
              min: romMin<%=e.right%>,
              max: romMax<%=e.right%>
              },
           gridlines: {
            color: 'transparent',
          },
          baselineColor: '#D4D4D4'}
        };
    
        var chartrom<%=e.right%> = new google.visualization.AreaChart(document.getElementById('chartrom<%=e.right%>'));
        chartrom<%=e.right%>.draw(data, options);
      }
    }
    }// right EMG and ROM
    else if('<%=e.right%>' == ''){
    
    
     google.charts.load('current', {'packages':['corechart']});
      google.charts.setOnLoadCallback(drawChart);
      function drawChart() {
        //EMG - right
       var data = new google.visualization.DataTable();
       var emgMax<%=e.right%> = 0;
      var emg_max_list<%=e.right%> = [];
      var rom_min_max_list<%=e.right%> = [];
      data.addColumn('number', 'date');
      data.addColumn('number', 'Emg');
    data.addColumn({type: 'string', role: 'style'});
    
    document.getElementById("emg_icon<%=e.report_name%>right").src="/icons/blank.svg";
    emgMax<%=e.right%> = 10;
    
    
        var options = {
           legend: 'none',
          chartArea: {
          
          top:10,
          width:"86%",
          height:"75%",
          backgroundColor: {
            stroke: '#D4D4D4',
            strokeWidth: 1
          }
        },
         pointSize: 5,
        series: {
          0: { areaOpacity: 0.5,pointShape: 'circle'},
          1: { areaOpacity: 1,pointShape: 'circle'}
          },
    
          colors:['red','white'],
          
          hAxis: {
            viewWindow: {
              min: 0,
              max: <%=numofdays %>
              },
            title: 'Days',  
            
            gridlines: {
              color: 'transparent'
            },
            baselineColor: '#D4D4D4'
            },
          vAxis: {minValue: 0,
            viewWindow: {
              min: 0,
              max: emgMax<%=e.right%>
              },
           gridlines: {
            color: 'transparent',
          },
          baselineColor: '#D4D4D4'}
        };
    
        var chartemg<%=e.right%> = new google.visualization.AreaChart(document.getElementById('chartemg<%=e.report_name%>right'));
        chartemg<%=e.right%>.draw(data, options);
        // ROM - right
         var data = new google.visualization.DataTable();
         var romMax<%=e.right%> = -360;
        var romMin<%=e.right%> = 360;
      data.addColumn('number', 'date');
      data.addColumn('number', 'rommax');
    data.addColumn({type: 'string', role: 'style'});
    data.addColumn('number', 'rommin');
    data.addColumn({type: 'string', role: 'style'});
    data.addColumn('number', 'romoffset');
    data.addColumn({type: 'string', role: 'style'});
    
  document.getElementById("rom_icon<%=e.report_name%>right").src="/icons/blank.svg";
    romMax<%=e.right%> = romMax<%=e.right%> + 10;
    romMin<%=e.right%> = 0;
    
    
        var options = {
           legend: 'none',
          chartArea: {
          
          top:10,
          width:"86%",
          height:"75%",
          backgroundColor: {
            stroke: '#D4D4D4',
            strokeWidth: 1
          }
        },
         pointSize: 5,
        series: {
          0: { areaOpacity: 0.5,pointShape: 'circle'},
          1: { areaOpacity: 1,pointShape: 'circle'},
          2: { areaOpacity: 0,pointShape: 'circle'}
          },
    
          colors:['red','white'],
          
          hAxis: {
            viewWindow: {
              min: 0,
              max: <%=numofdays %>
              },
            title: 'Days',  
            
            gridlines: {
              color: 'transparent'
            },
            baselineColor: '#D4D4D4'
            },
          vAxis: {minValue: 0,
            viewWindow: {
              min: romMin<%=e.right%>,
              max: romMax<%=e.right%>
              },
           gridlines: {
            color: 'transparent',
          },
          baselineColor: '#D4D4D4'}
        };
    
        var chartrom<%=e.right%> = new google.visualization.AreaChart(document.getElementById('chartrom<%=e.report_name%>right'));
        chartrom<%=e.right%>.draw(data, options);
      }
    
    }
</script>
</div>
 <%});%>

   <script type="text/javascript">
   console.log('HINE');
   console.log(<%=overall_rom%>);
   console.log(<%=counter_rom%>);
   <%=overall_rom = Math.round(overall_rom/counter_rom)%>
   if(isNaN(<%=overall_rom%>))
   {
    <%=overall_rom = 0%>
   }
   
   document.getElementById("overall_rom").innerHTML =<%=overall_rom%> + '%';
    document.getElementById("over_chart").innerHTML ='<div id="over_chart'+'" style="position:relative;left:12pt;height:80pt;width:80pt;top:-10pt;"'+ 'class="ldBar label-center"'+'data-value="<%=overall_rom%>"' + 'data-preset="line"'+'></div>'
   


              </script>


<!--PAGE 3-->
<div class="page">

  <div class="header" style="height: 10pt;width: 100%;background-color: #062444 !important;"></div>
    

  <div style="text-align:center;">
    <p style="float:center;margin-top:40px;font-size:20px;font-weight:50px;color: #062545 !important;font-size:16pt; font-family: 'Avenir';text-align: center">Additional Comment</p>
    </div>
    
    <hr style="width:95%;text-align:center;margin-left:auto;margin-right:auto;height:0.5px;border-width:0;color:gray !important;background-color:gray !important;margin-top:60px;">
    <hr style="width:95%;text-align:center;margin-left:auto;margin-right:auto;height:0.5px;border-width:0;color:gray !important;background-color:gray !important;margin-top:30px;">
    <hr style="width:95%;text-align:center;margin-left:auto;margin-right:auto;height:0.5px;border-width:0;color:gray !important;background-color:gray !important;margin-top:30px;">
    <hr style="width:95%;text-align:center;margin-left:auto;margin-right:auto;height:0.5px;border-width:0;color:gray !important;background-color:gray !important;margin-top:30px;">
    
    
    <p style="float:left;margin-left:2.5%;margin-top:30px;font-size:13px;font-weight:5px;color: #062545 !important;font-size:14pt; font-family: 'Avenir';">Next Session:</p>
    <hr style="float:left;width:40%;margin-top:50px;text-align:left;margin-left:auto;margin-right:auto;height:0.5px;border-width:0;color:gray !important;background-color:gray !important;">
    
    <p style="float:left;margin-top:30px;margin-left:40px;font-size:13px;font-weight:5px;color: #062545 !important;font-size:14pt; font-family: 'Avenir';">Time:</p>
    <hr style="float:left;width:30%;margin-top:50px;text-align:left;margin-left:auto;margin-right:auto;height:0.5px;border-width:0;color:gray !important;background-color:gray !important;">
    
    <p style="clear:both;float:left;margin-left:2.5%;margin-top:30px;font-size:13px;font-weight:5px;color: #062545 !important;font-size:14pt; font-family: 'Avenir';">Report handed over by:</p>
    <hr style="float:left;width:40%;margin-top:50px;text-align:left;margin-left:auto;margin-right:auto;height:0.5px;border-width:0;color:gray !important;background-color:gray !important;">
    
    <p style="float:left;margin-top:30px;margin-left:40px;font-size:13px;font-weight:5px;color: #062545 !important;font-size:14pt; font-family: 'Avenir';">Dept:</p>
    <hr style="float:left;width:20%;margin-top:50px;text-align:left;margin-left:auto;margin-right:auto;height:0.5px;border-width:0;color:gray !important;background-color:gray !important;">
    
    <p style="clear:both;float:left;margin-left:2.5%;margin-top:130px;margin-bottom:30px;font-size:13px;font-weight:5px;color: #062545 !important;font-size:14pt; font-family: 'Avenir';">Seal & Signature</p>
    <p style="float:right;margin-right:5%;margin-top:130px;margin-bottom:30px;font-size:13px;font-weight:5px;color: #062545 !important;font-size:10pt; font-family: 'Avenir';">Contact No.</p>
    
    
  <div class="terms_and_conditions" style="clear:both;position:relative;top:50%;background-color:#006ab1 !important;width:100%;height:35px;">
  <p style="text-align:center;color:white !important;font-size:20px;font-weight:50px;padding-top:5px;font-family: 'Helvetica';">Terms & Conditions</p>
  
  <ul style="position:relative;top:20px;left:20pt;margin-left:10pt; margin-right:10pt;list-style-type: disc;">
  
  <li style="font-size:13px;font-weight:5px;margin-top:20px;margin-right:20pt;font-family: 'Helvetica';color: #707070;">The reported results are for information and interpretation of the referring doctor/ physiotherapist or such medical
professional who understands reporting units, reference ranges and limitations of technologies.</li>
  
  <li style="font-size:13px;font-weight:5px;margin-top:20px;margin-right:20pt;font-family: 'Helvetica';color: #707070;">It is presumed that the assessment tests are performed on the patient named or identified and the verification of the
particulars have been cleared out by the patient or his/her representative at the point of generation of this report.
The reported results are restricted to the given patient only.</li>
  
  <li style="font-size:13px;font-weight:5px;margin-top:20px;margin-right:20pt;font-family: 'Helvetica';color: #707070;">Should the results indicate an unexpected abnormality, the same should be reconfirmed.</li>
    
  <li style="font-size:13px;font-weight:5px;margin-top:20px;margin-right:20pt;font-family: 'Helvetica';color: #707070;">Results may vary from one center to another and from time to time for the same parameter for the same patient.
Assessments are performed in accordance with standard set procedures. Neither the physiotherapy center
(including its employees, representatives) using Pheezee nor the manufacturer of Pheezee (Startoon Labs and its
employees, representatives) assume any liability, responsibility for any loss or damage that may be incurred by any
person as a result of presuming the meaning or contents of this report.</li>
  
  <li style="font-size:13px;font-weight:5px;margin-top:20px;margin-right:20pt;font-family: 'Helvetica';color: #707070;">This report is not valid for medico-legal purposes.</li>
  
</ul>  

<p style="position:relative;font-size:13px;font-weight:5px;top:30px;left:20px;color: #707070;font-family: 'Helvetica';"><b>Suggestions</b></p>

    <ul style="position:relative;top:30px;margin-left:10pt; margin-right:10pt;list-style-type: disc;left:20pt;">
    <li style="font-size:13px;font-weight:5px;margin-top:20px;font-family: 'Helvetica';color: #707070;">Values out of reference range requires reconfirmation before starting any medical treatment.</li>
    
  <li style="font-size:13px;font-weight:5px;margin-top:20px;font-family: 'Helvetica';color: #707070;">Retesting/reassessment is needed if you suspect any quality shortcomings.</li>
  </ul>
  </div>

  <!-- Footer of last page-->
        <div style="width: 100%;height: 29pt;background-color:#062444 !important;position: relative;top: 360pt;"></div>
                  <p style="color:#FFFFFF !important;text-align: right;font-size:11pt; font-family: 'Avenir';top:334pt;right:5pt;position: relative;"> Page <%=page_count+2%>/<%=page_count+2%> </p>
        <p style="color:#FFFFFF !important;text-align: center;font-size:11pt; font-family: 'Avenir';top:319pt;position: relative;"> <%if(details[0].phiziopatients[0].patientgender.toLowerCase() == 'male'){%>Mr. <%}else {%> Ms. <%}%> <%= details[0].phiziopatients[0].patientname.substr(0,1).toUpperCase()%><%= details[0].phiziopatients[0].patientname.substr(1,details[0].phiziopatients[0].patientname.length)%> </p>
        <p style="color:#FFFFFF !important;text-align: left;font-size:11pt; font-family: 'Avenir';top:306pt;position: relative;left: 5pt;"> <%= new Date(today).toDateString().split(' ').slice(1).join(' ')%> </p>
        
        </div>
</div>


   </body>
</html>
<%}%>
